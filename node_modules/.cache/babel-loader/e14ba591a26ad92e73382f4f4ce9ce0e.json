{"ast":null,"code":"function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction configTitle(string) {\n  let temp = string.split('-');\n  const arr = temp.map(item => {\n    return item.charAt(0).toUpperCase() + item.slice(1);\n  });\n  return arr.join(' ');\n}\n\nfunction config2(string) {\n  let temp = string.split('-');\n  const arr = temp.map(item => {\n    return item.charAt(0).toUpperCase() + item.slice(1);\n  });\n  console.log(arr);\n  const x = arr.join(' '); //return arr.join(' ');\n}\n\nconfig2(`king's-speech`);\nexport { capitalizeFirstLetter, configTitle };","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/helper/helper.js"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","configTitle","temp","split","arr","map","item","join","config2","console","log","x"],"mappings":"AAAA,SAASA,qBAAT,CAA+BC,MAA/B,EAAuC;AACnC,SAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACH;;AAED,SAASC,WAAT,CAAqBJ,MAArB,EAA6B;AACzB,MAAIK,IAAI,GAAGL,MAAM,CAACM,KAAP,CAAa,GAAb,CAAX;AACA,QAAMC,GAAG,GAAGF,IAAI,CAACG,GAAL,CAAUC,IAAD,IAAU;AAC3B,WAAOA,IAAI,CAACR,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BO,IAAI,CAACN,KAAL,CAAW,CAAX,CAAtC;AACH,GAFW,CAAZ;AAGA,SAAOI,GAAG,CAACG,IAAJ,CAAS,GAAT,CAAP;AACH;;AAED,SAASC,OAAT,CAAiBX,MAAjB,EAAyB;AACrB,MAAIK,IAAI,GAAGL,MAAM,CAACM,KAAP,CAAa,GAAb,CAAX;AACA,QAAMC,GAAG,GAAGF,IAAI,CAACG,GAAL,CAAUC,IAAD,IAAU;AAC3B,WAAOA,IAAI,CAACR,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BO,IAAI,CAACN,KAAL,CAAW,CAAX,CAAtC;AACH,GAFW,CAAZ;AAGAS,EAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACA,QAAMO,CAAC,GAAGP,GAAG,CAACG,IAAJ,CAAS,GAAT,CAAV,CANqB,CAOrB;AACH;;AAEDC,OAAO,CAAE,eAAF,CAAP;AAGA,SAASZ,qBAAT,EAAgCK,WAAhC","sourcesContent":["function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction configTitle(string) {\n    let temp = string.split('-');\n    const arr = temp.map((item) => {\n        return item.charAt(0).toUpperCase() + item.slice(1);\n    });\n    return arr.join(' ');\n}\n\nfunction config2(string) {\n    let temp = string.split('-');\n    const arr = temp.map((item) => {\n        return item.charAt(0).toUpperCase() + item.slice(1);\n    });\n    console.log(arr);\n    const x = arr.join(' ');\n    //return arr.join(' ');\n}\n\nconfig2(`king's-speech`);\n\n\nexport { capitalizeFirstLetter, configTitle };"]},"metadata":{},"sourceType":"module"}