{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/routing/Router.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, useHistory, withRouter } from 'react-router-dom';\nimport { auth } from '../firebase/firebase';\nimport SignIn from '../components/SignIn';\nimport SignUp from '../components/SignUp';\nimport Nav from '../components/Nav';\nimport Home from '../components/Home';\nimport Dashboard from '../components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Router = props => {\n  _s();\n\n  const [email, setEmail] = useState(null); //console.log(props.location.pathname, 'routerprops');\n\n  async function submitHandSignIn(e) {\n    e.preventDefault();\n    console.log('prevented Submit');\n  }\n\n  const HomeNav = () => {\n    return /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            setEmail: setEmail,\n            showSignIn: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Home, {\n            email: email,\n            setEmail: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 20\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  };\n\n  const DashboardNav = () => {\n    return /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            setEmail: setEmail,\n            showSignIn: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: auth.currentUser === null ? HomeWithNav() : DashboardNav()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          setEmail: setEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signin\",\n          render: () => /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/signup\",\n          render: () => /*#__PURE__*/_jsxDEV(SignUp, {\n            email: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/dashboard\",\n          render: () => /*#__PURE__*/_jsxDEV(Dashboard, {\n            email: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Router, \"MIf0ox0X7PbEj07NYfRfM2RH6OE=\");\n\n_c = Router;\nexport default _c2 = withRouter(Router); // async function setDB() {\n//   await setDoc(doc(db, \"hiscores\", \"0\"), {\n//     name: \"Anonymous\",\n//     time: 90000,\n//   });\n//   await setDoc(doc(db, \"hiscores\", \"1\"), {\n//     name: \"Nyancat\",\n//     time: 95000,\n//   });\n//   await setDoc(doc(db, \"hiscores\", \"2\"), {\n//     name: \"Spike Spiegel\",\n//     time: 100000,\n//   });\n//   await setDoc(doc(db, \"hiscores\", \"3\"), {\n//     name: \"Monkey D. Luffy\",\n//     time: 120000,\n//   });\n//   await setDoc(doc(db, \"hiscores\", \"4\"), {\n//     name: \"Naruto Uzumaki\",\n//     time: 300000,\n//   });\n// }\n// setDB();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Router\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/routing/Router.js"],"names":["React","useEffect","useState","BrowserRouter","Route","Switch","Redirect","useHistory","withRouter","auth","SignIn","SignUp","Nav","Home","Dashboard","Router","props","email","setEmail","submitHandSignIn","e","preventDefault","console","log","HomeNav","DashboardNav","currentUser","HomeWithNav"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, useHistory, withRouter } from 'react-router-dom';\nimport { auth } from '../firebase/firebase';\nimport SignIn from '../components/SignIn';\nimport SignUp from '../components/SignUp';\nimport Nav from '../components/Nav';\nimport Home from '../components/Home';\nimport Dashboard from '../components/Dashboard';\n\nconst Router = (props) => {\n    const [email, setEmail] = useState(null);\n    //console.log(props.location.pathname, 'routerprops');\n\n    async function submitHandSignIn(e) {\n        e.preventDefault();\n        console.log('prevented Submit');\n    }\n\n    const HomeNav = () => {\n        return <Route exact path='/' render={() => {\n            return <div><Nav setEmail={setEmail} showSignIn={true} /><Home email={email} setEmail={setEmail} /></div>\n        }}></Route>\n    };\n\n    const DashboardNav = () => {\n        return <Route exact path='/' render={() => {\n            return <div><Nav setEmail={setEmail} showSignIn={true} /><Dashboard /></div>\n        }}></Route>\n    }\n\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path='/'>\n                    {auth.currentUser === null ?\n                        HomeWithNav() :\n                        DashboardNav()\n                    }\n                </Route>\n                <div>\n                    <Nav setEmail={setEmail} />\n                    <Route exact path='/signin' render={() => <SignIn />} />\n                    <Route exact path='/signup' render={() => <SignUp email={email} />} />\n                    <Route exact path='/dashboard' render={() => <Dashboard email={email} />} />\n                </div>\n            </Switch>\n        </BrowserRouter >\n    );\n};\n\nexport default withRouter(Router);\n\n// async function setDB() {\n//   await setDoc(doc(db, \"hiscores\", \"0\"), {\n//     name: \"Anonymous\",\n//     time: 90000,\n//   });\n//   await setDoc(doc(db, \"hiscores\", \"1\"), {\n//     name: \"Nyancat\",\n//     time: 95000,\n//   });\n//   await setDoc(doc(db, \"hiscores\", \"2\"), {\n//     name: \"Spike Spiegel\",\n//     time: 100000,\n//   });\n//   await setDoc(doc(db, \"hiscores\", \"3\"), {\n//     name: \"Monkey D. Luffy\",\n//     time: 120000,\n//   });\n//   await setDoc(doc(db, \"hiscores\", \"4\"), {\n//     name: \"Naruto Uzumaki\",\n//     time: 300000,\n//   });\n// }\n\n// setDB();"]},"metadata":{},"sourceType":"module"}