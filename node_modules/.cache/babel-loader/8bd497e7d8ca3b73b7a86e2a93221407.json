{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Username.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { auth } from '../firebase/firebase';\nimport { useHistory } from 'react-router-dom';\nimport { customMsg } from '../helper/helper';\nimport { updateProfile, reauthenticateWithCredential, EmailAuthProvider } from \"firebase/auth\";\nimport AuthMsg from './AuthMsg';\nimport '../styles/Username.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Username = ({\n  name,\n  setName\n}) => {\n  _s();\n\n  const nameField = useRef();\n  const currentPw = useRef();\n  const [error, setError] = useState(null);\n  const history = useHistory();\n\n  function redirectDash() {\n    history.push(`dashboard`);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const cred = EmailAuthProvider.credential(auth.currentUser.email, currentPw.current.value);\n    reauthenticateWithCredential(auth.currentUser, cred).then(() => {\n      // User re-authed.\n      updateProfile(auth.currentUser, {\n        displayName: nameField.current.value\n      }).then(() => {\n        console.log('success');\n        console.log(nameField.current.value);\n        setName(nameField.current.value);\n        redirectDash();\n      }).catch(error => {\n        setError( /*#__PURE__*/_jsxDEV(AuthMsg, {\n          useClass: `auth-error`,\n          msg: customMsg(`${error}`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 30\n        }, this));\n      });\n    }).catch(error => {\n      // An error ocurred\n      if (error.code) {\n        setError( /*#__PURE__*/_jsxDEV(AuthMsg, {\n          useClass: `auth-error`,\n          msg: customMsg(error.code)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 26\n        }, this));\n      }\n\n      return;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"username\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"username-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Update Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Leave 'new' field blank if not updating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), error, /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Current Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: currentPw,\n          type: \"password\",\n          placeholder: \"Current Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: nameField,\n          type: \"text\",\n          placeholder: \"First Name\",\n          defaultValue: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username-submit\",\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/dashboard\",\n          children: \"Go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Username, \"s5VlS0SOfAWbHNJ0FymgQYYgxHQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Username;\nexport default Username;\n\nvar _c;\n\n$RefreshReg$(_c, \"Username\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Username.js"],"names":["useRef","useState","auth","useHistory","customMsg","updateProfile","reauthenticateWithCredential","EmailAuthProvider","AuthMsg","Username","name","setName","nameField","currentPw","error","setError","history","redirectDash","push","handleSubmit","e","preventDefault","cred","credential","currentUser","email","current","value","then","displayName","console","log","catch","code"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\nimport { auth } from '../firebase/firebase';\nimport { useHistory } from 'react-router-dom';\nimport { customMsg } from '../helper/helper';\nimport {\n    updateProfile,\n    reauthenticateWithCredential,\n    EmailAuthProvider,\n} from \"firebase/auth\";\nimport AuthMsg from './AuthMsg';\nimport '../styles/Username.css';\n\nconst Username = ({ name, setName }) => {\n    const nameField = useRef();\n    const currentPw = useRef();\n    const [error, setError] = useState(null);\n    const history = useHistory();\n\n    function redirectDash() {\n        history.push(`dashboard`);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        const cred = EmailAuthProvider.credential(auth.currentUser.email, currentPw.current.value);\n        reauthenticateWithCredential(auth.currentUser, cred).then(() => {\n            // User re-authed.\n            updateProfile(auth.currentUser, { displayName: nameField.current.value })\n                .then(() => {\n                    console.log('success');\n                    console.log(nameField.current.value)\n                    setName(nameField.current.value);\n                    redirectDash();\n                })\n                .catch((error) => {\n                    setError(<AuthMsg useClass={`auth-error`} msg={customMsg(`${error}`)} />);\n                })\n        }).catch((error) => {\n            // An error ocurred\n            if (error.code) {\n                setError(<AuthMsg useClass={`auth-error`} msg={customMsg(error.code)} />);\n            }\n            return;\n        });\n    }\n\n    return (\n        <div className='username'>\n            <div className='username-container'>\n                <div>\n                    <h1>Update Username</h1>\n                    <h2>Leave 'new' field blank if not updating</h2>\n                </div>\n                {error}\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <label>Current Password</label>\n                    <input ref={currentPw} type='password' placeholder='Current Password' required></input>\n                    <label>New Name</label>\n                    <input ref={nameField} type='text' placeholder='First Name' defaultValue={name}></input>\n                    <input id='username-submit' type='submit' value='Submit'></input>\n                    <a href='/dashboard'>Go back</a>\n                </form>\n            </div>\n            <div className='overlay'></div>\n        </div >\n    );\n};\n\nexport default Username;"]},"metadata":{},"sourceType":"module"}