{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport { Link, Redirect, Switch } from 'react-router-dom';\nimport { useRef, useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { collection, addDoc, getDocs } from 'firebase/firestore';\nimport { db, auth } from '../firebase/firebase';\nimport '../styles/SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = props => {\n  _s();\n\n  const {\n    createUser,\n    setAuthState,\n    email\n  } = props; // onAuthStateChanged(auth, (user) => {\n  //     if (user) {\n  //         // User is signed in, see docs for a list of available properties\n  //         // https://firebase.google.com/docs/reference/js/firebase.User\n  //         const uid = user.uid;\n  //         //console.log(auth.currentUser, 'currentUser');\n  //         setSignedIn(auth.currentUser);\n  //         // ...\n  //     } else {\n  //         // User is signed out\n  //         // ...\n  //     }\n  // });\n\n  const pw1 = useRef();\n  const pw2 = useRef();\n  const mail = useRef();\n  console.log(auth.currentUser, 'currentUser1');\n\n  async function handleSubmit() {\n    //console.log(pw1.current.value, pw2.current.value, mail.current.value);\n    //const [firstName, email, pw1, pw2] = e.target.childNodes;\n    // if (checkPw(pw1, pw2) === false) {\n    //     console.log('passwords do not match');\n    //     return;\n    // }\n    createUser(mail.current.value, pw1.current.value); //check if email in database already\n    // setCursor('wait');\n    // console.log('pw match');\n    // await addToDoc(firstName.value, email.value, pw1.value);\n    // console.log('uploaded');\n    // setTimeout(() => {\n    //     setCursor('default');\n    // }, 2000);\n  } // function checkPw(pw1, pw2) {\n  //     return pw1.value === pw2.value ? true : false;\n  // }\n  // function setCursor(val) {\n  //     document.querySelectorAll('*').forEach((elem) => {\n  //         elem.style.cursor = val;\n  //     });\n  // }\n  // async function addToDoc(firstName, email, password) {\n  //     await addDoc(collection(db, 'users'), {\n  //         firstName,\n  //         email,\n  //         password,\n  //     });\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUp\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signUp-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: mail,\n          type: \"email\",\n          placeholder: \"Email Address\",\n          defaultValue: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: pw1,\n          type: \"password\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: pw2,\n          type: \"password\",\n          placeholder: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Sign Up\",\n          onClick: () => handleSubmit()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Already a user? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signin\",\n            children: \"Sign in now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"FkZGS8d3J1sMcDM6V4OeYRWcEV0=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/SignUp.js"],"names":["Link","Redirect","Switch","useRef","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","collection","addDoc","getDocs","db","auth","SignUp","props","createUser","setAuthState","email","pw1","pw2","mail","console","log","currentUser","handleSubmit","current","value"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,MAAzB,QAAuC,kBAAvC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,8BAAT,EAAyCC,0BAAzC,EAAqEC,kBAArE,QAA+F,eAA/F;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,OAA7B,QAA4C,oBAA5C;AACA,SAASC,EAAT,EAAaC,IAAb,QAAyB,sBAAzB;AACA,OAAO,sBAAP;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA;AAA5B,MAAsCH,KAA5C,CADsB,CAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMI,GAAG,GAAGf,MAAM,EAAlB;AACA,QAAMgB,GAAG,GAAGhB,MAAM,EAAlB;AACA,QAAMiB,IAAI,GAAGjB,MAAM,EAAnB;AAEAkB,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACW,WAAjB,EAA8B,cAA9B;;AAEA,iBAAeC,YAAf,GAA8B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACAT,IAAAA,UAAU,CAACK,IAAI,CAACK,OAAL,CAAaC,KAAd,EAAqBR,GAAG,CAACO,OAAJ,CAAYC,KAAjC,CAAV,CAP0B,CAQ1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GAvCqB,CAyCtB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAA,gCACI;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,GAAG,EAAEN,IAAZ;AAAkB,UAAA,IAAI,EAAC,OAAvB;AAA+B,UAAA,WAAW,EAAC,eAA3C;AAA2D,UAAA,YAAY,EAAEH;AAAzE;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,GAAG,EAAEC,GAAZ;AAAiB,UAAA,IAAI,EAAC,UAAtB;AAAiC,UAAA,WAAW,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAO,UAAA,GAAG,EAAEC,GAAZ;AAAiB,UAAA,IAAI,EAAC,UAAtB;AAAiC,UAAA,WAAW,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,SAA3B;AAAqC,UAAA,OAAO,EAAE,MAAMK,YAAY;AAAhE;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA,sDACoB,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA7ED;;GAAMX,M;;KAAAA,M;AA+EN,eAAeA,MAAf","sourcesContent":["import { Link, Redirect, Switch } from 'react-router-dom';\nimport { useRef, useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { collection, addDoc, getDocs } from 'firebase/firestore';\nimport { db, auth } from '../firebase/firebase';\nimport '../styles/SignUp.css';\n\nconst SignUp = (props) => {\n    const { createUser, setAuthState, email } = props;\n    // onAuthStateChanged(auth, (user) => {\n    //     if (user) {\n    //         // User is signed in, see docs for a list of available properties\n    //         // https://firebase.google.com/docs/reference/js/firebase.User\n    //         const uid = user.uid;\n    //         //console.log(auth.currentUser, 'currentUser');\n    //         setSignedIn(auth.currentUser);\n    //         // ...\n    //     } else {\n    //         // User is signed out\n    //         // ...\n    //     }\n    // });\n\n    const pw1 = useRef();\n    const pw2 = useRef();\n    const mail = useRef();\n\n    console.log(auth.currentUser, 'currentUser1');\n\n    async function handleSubmit() {\n        //console.log(pw1.current.value, pw2.current.value, mail.current.value);\n        //const [firstName, email, pw1, pw2] = e.target.childNodes;\n        // if (checkPw(pw1, pw2) === false) {\n        //     console.log('passwords do not match');\n        //     return;\n        // }\n        createUser(mail.current.value, pw1.current.value);\n        //check if email in database already\n        // setCursor('wait');\n        // console.log('pw match');\n        // await addToDoc(firstName.value, email.value, pw1.value);\n        // console.log('uploaded');\n        // setTimeout(() => {\n        //     setCursor('default');\n        // }, 2000);\n\n    }\n\n    // function checkPw(pw1, pw2) {\n    //     return pw1.value === pw2.value ? true : false;\n    // }\n\n    // function setCursor(val) {\n    //     document.querySelectorAll('*').forEach((elem) => {\n    //         elem.style.cursor = val;\n    //     });\n    // }\n\n    // async function addToDoc(firstName, email, password) {\n    //     await addDoc(collection(db, 'users'), {\n    //         firstName,\n    //         email,\n    //         password,\n    //     });\n    // }\n\n\n\n    return (\n        <div className='signUp'>\n            <div className='signUp-overlay'>\n                <div>\n                    <input placeholder='First Name' />\n                    <input ref={mail} type='email' placeholder='Email Address' defaultValue={email} />\n                    <input ref={pw1} type='password' placeholder='Password' />\n                    <input ref={pw2} type='password' placeholder='Confirm Password' />\n                    <input type='button' value='Sign Up' onClick={() => handleSubmit()} />\n                    <div>\n                        Already a user? <Link to='/signin'>Sign in now</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}