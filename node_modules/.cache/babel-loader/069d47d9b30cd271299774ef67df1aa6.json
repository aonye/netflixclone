{"ast":null,"code":"import _regeneratorRuntime from\"/home/yeandyy/Documents/the_odin_project/netflixclone/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/yeandyy/Documents/the_odin_project/netflixclone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Link,Redirect,Switch}from'react-router-dom';import{useRef,useState}from'react';import{createUserWithEmailAndPassword,signInWithEmailAndPassword,onAuthStateChanged}from\"firebase/auth\";import{collection,addDoc,getDocs}from'firebase/firestore';import{db,auth}from'../firebase/firebase';import'../styles/SignUp.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SignUp=function SignUp(props){var createUser=props.createUser,setAuthState=props.setAuthState,email=props.email;// onAuthStateChanged(auth, (user) => {\n//     if (user) {\n//         // User is signed in, see docs for a list of available properties\n//         // https://firebase.google.com/docs/reference/js/firebase.User\n//         const uid = user.uid;\n//         //console.log(auth.currentUser, 'currentUser');\n//         setSignedIn(auth.currentUser);\n//         // ...\n//     } else {\n//         // User is signed out\n//         // ...\n//     }\n// });\nvar pw1=useRef();var pw2=useRef();var mail=useRef();console.log(auth.currentUser,'currentUser1');function handleSubmit(){return _handleSubmit.apply(this,arguments);}// function checkPw(pw1, pw2) {\n//     return pw1.value === pw2.value ? true : false;\n// }\n// function setCursor(val) {\n//     document.querySelectorAll('*').forEach((elem) => {\n//         elem.style.cursor = val;\n//     });\n// }\n// async function addToDoc(firstName, email, password) {\n//     await addDoc(collection(db, 'users'), {\n//         firstName,\n//         email,\n//         password,\n//     });\n// }\nfunction _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://console.log(pw1.current.value, pw2.current.value, mail.current.value);\n//const [firstName, email, pw1, pw2] = e.target.childNodes;\n// if (checkPw(pw1, pw2) === false) {\n//     console.log('passwords do not match');\n//     return;\n// }\ncreateUser(mail.current.value,pw1.current.value);//check if email in database already\n// setCursor('wait');\n// console.log('pw match');\n// await addToDoc(firstName.value, email.value, pw1.value);\n// console.log('uploaded');\n// setTimeout(() => {\n//     setCursor('default');\n// }, 2000);\ncase 1:case\"end\":return _context.stop();}}},_callee);}));return _handleSubmit.apply(this,arguments);}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"signUp\",style:{cursor:'default'},children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"First Name\"}),/*#__PURE__*/_jsx(\"input\",{ref:mail,type:\"email\",placeholder:\"Email Address\",defaultValue:email}),/*#__PURE__*/_jsx(\"input\",{ref:pw1,type:\"password\",placeholder:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{ref:pw2,type:\"password\",placeholder:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Sign Up\",onClick:function onClick(){return handleSubmit();}}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Already a user? \",/*#__PURE__*/_jsx(Link,{to:\"/signin\",children:\"Sign in now\"})]})]})});};export default SignUp;","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/SignUp.js"],"names":["Link","Redirect","Switch","useRef","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","collection","addDoc","getDocs","db","auth","SignUp","props","createUser","setAuthState","email","pw1","pw2","mail","console","log","currentUser","handleSubmit","current","value","cursor"],"mappings":"6QAAA,OAASA,IAAT,CAAeC,QAAf,CAAyBC,MAAzB,KAAuC,kBAAvC,CACA,OAASC,MAAT,CAAiBC,QAAjB,KAAiC,OAAjC,CACA,OAASC,8BAAT,CAAyCC,0BAAzC,CAAqEC,kBAArE,KAA+F,eAA/F,CACA,OAASC,UAAT,CAAqBC,MAArB,CAA6BC,OAA7B,KAA4C,oBAA5C,CACA,OAASC,EAAT,CAAaC,IAAb,KAAyB,sBAAzB,CACA,MAAO,sBAAP,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,CACtB,GAAQC,CAAAA,UAAR,CAA4CD,KAA5C,CAAQC,UAAR,CAAoBC,YAApB,CAA4CF,KAA5C,CAAoBE,YAApB,CAAkCC,KAAlC,CAA4CH,KAA5C,CAAkCG,KAAlC,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,GAAG,CAAGf,MAAM,EAAlB,CACA,GAAMgB,CAAAA,GAAG,CAAGhB,MAAM,EAAlB,CACA,GAAMiB,CAAAA,IAAI,CAAGjB,MAAM,EAAnB,CAEAkB,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACW,WAAjB,CAA8B,cAA9B,EApBsB,QAsBPC,CAAAA,YAtBO,+CAyCtB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAzDsB,+FAsBtB,mIACI;AACA;AACA;AACA;AACA;AACA;AACAT,UAAU,CAACK,IAAI,CAACK,OAAL,CAAaC,KAAd,CAAqBR,GAAG,CAACO,OAAJ,CAAYC,KAAjC,CAAV,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfJ,sDAtBsB,+CA6DtB,mBACI,kCACI,aAAK,SAAS,CAAC,QAAf,CAAwB,KAAK,CAAE,CAAEC,MAAM,CAAE,SAAV,CAA/B,wBACI,cAAO,WAAW,CAAC,YAAnB,EADJ,cAEI,cAAO,GAAG,CAAEP,IAAZ,CAAkB,IAAI,CAAC,OAAvB,CAA+B,WAAW,CAAC,eAA3C,CAA2D,YAAY,CAAEH,KAAzE,EAFJ,cAGI,cAAO,GAAG,CAAEC,GAAZ,CAAiB,IAAI,CAAC,UAAtB,CAAiC,WAAW,CAAC,UAA7C,EAHJ,cAII,cAAO,GAAG,CAAEC,GAAZ,CAAiB,IAAI,CAAC,UAAtB,CAAiC,WAAW,CAAC,kBAA7C,EAJJ,cAKI,cAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,CAAC,SAA3B,CAAqC,OAAO,CAAE,yBAAMK,CAAAA,YAAY,EAAlB,EAA9C,EALJ,cAMI,uDACoB,KAAC,IAAD,EAAM,EAAE,CAAC,SAAT,yBADpB,GANJ,GADJ,EADJ,CAcH,CA3ED,CA6EA,cAAeX,CAAAA,MAAf","sourcesContent":["import { Link, Redirect, Switch } from 'react-router-dom';\nimport { useRef, useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { collection, addDoc, getDocs } from 'firebase/firestore';\nimport { db, auth } from '../firebase/firebase';\nimport '../styles/SignUp.css';\n\nconst SignUp = (props) => {\n    const { createUser, setAuthState, email } = props;\n    // onAuthStateChanged(auth, (user) => {\n    //     if (user) {\n    //         // User is signed in, see docs for a list of available properties\n    //         // https://firebase.google.com/docs/reference/js/firebase.User\n    //         const uid = user.uid;\n    //         //console.log(auth.currentUser, 'currentUser');\n    //         setSignedIn(auth.currentUser);\n    //         // ...\n    //     } else {\n    //         // User is signed out\n    //         // ...\n    //     }\n    // });\n\n    const pw1 = useRef();\n    const pw2 = useRef();\n    const mail = useRef();\n\n    console.log(auth.currentUser, 'currentUser1');\n\n    async function handleSubmit() {\n        //console.log(pw1.current.value, pw2.current.value, mail.current.value);\n        //const [firstName, email, pw1, pw2] = e.target.childNodes;\n        // if (checkPw(pw1, pw2) === false) {\n        //     console.log('passwords do not match');\n        //     return;\n        // }\n        createUser(mail.current.value, pw1.current.value);\n        //check if email in database already\n        // setCursor('wait');\n        // console.log('pw match');\n        // await addToDoc(firstName.value, email.value, pw1.value);\n        // console.log('uploaded');\n        // setTimeout(() => {\n        //     setCursor('default');\n        // }, 2000);\n\n    }\n\n    // function checkPw(pw1, pw2) {\n    //     return pw1.value === pw2.value ? true : false;\n    // }\n\n    // function setCursor(val) {\n    //     document.querySelectorAll('*').forEach((elem) => {\n    //         elem.style.cursor = val;\n    //     });\n    // }\n\n    // async function addToDoc(firstName, email, password) {\n    //     await addDoc(collection(db, 'users'), {\n    //         firstName,\n    //         email,\n    //         password,\n    //     });\n    // }\n\n\n\n    return (\n        <div>\n            <div className='signUp' style={{ cursor: 'default' }}>\n                <input placeholder='First Name' />\n                <input ref={mail} type='email' placeholder='Email Address' defaultValue={email} />\n                <input ref={pw1} type='password' placeholder='Password' />\n                <input ref={pw2} type='password' placeholder='Confirm Password' />\n                <input type='button' value='Sign Up' onClick={() => handleSubmit()} />\n                <div>\n                    Already a user? <Link to='/signin'>Sign in now</Link>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}