{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Account.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { auth } from '../firebase/firebase';\nimport { useHistory } from 'react-router-dom';\nimport { customMsg, checkPwMatch } from '../helper/helper';\nimport { updateEmail, updateProfile, updatePassword, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport AuthMsg from './AuthMsg';\nimport '../styles/Account.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = ({\n  saveUserName,\n  saveUserEmail,\n  saveUserPassword,\n  displayName,\n  email,\n  acctMsg,\n  setAcctMsg\n}) => {\n  _s();\n\n  const history = useHistory();\n  const nameField = useRef();\n  const emailField = useRef();\n  const pw = useRef();\n  const confirmpw = useRef();\n\n  function redirectSignUp() {\n    history.push(`dashboard`);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // if (checkPwMatch(pw.current.value, confirmpw.current.value) === false) {\n    //     setAcctMsg(<AuthMsg useClass={`auth-error`} msg={customMsg(`auth/confirm-pw-error`)} />);\n    //     return;\n    // }\n    //saveUserName(auth, nameField.current.value);\n\n    const promises = [];\n    promises.push(updateEmail(auth, emailField.current.value));\n    promises.push(updatePassword(auth, pw.current.value));\n    Promise.all(promises).then(() => {\n      history.push('/dashboard');\n    }).catch(error => {\n      alert(error);\n    }).finally(() => {}); //await saveUserEmail();\n    //await saveUserPassword(auth, );\n    //redirectSignUp();\n    //window.location.reload();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"acct\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"acct-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Update Account Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), acctMsg, /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: nameField,\n          type: \"text\",\n          placeholder: \"Name\",\n          defaultValue: displayName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: emailField,\n          type: \"email\",\n          placeholder: \"Email\",\n          defaultValue: email,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: pw,\n          type: \"password\",\n          minLength: \"6\",\n          placeholder: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: confirmpw,\n          type: \"password\",\n          minLength: \"6\",\n          placeholder: \"Confirm Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"acct-submit\",\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Account, \"EstUqP1RM9NIBVmi49xzZLLSo7g=\", false, function () {\n  return [useHistory];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Account.js"],"names":["useRef","auth","useHistory","customMsg","checkPwMatch","updateEmail","updateProfile","updatePassword","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","AuthMsg","Account","saveUserName","saveUserEmail","saveUserPassword","displayName","email","acctMsg","setAcctMsg","history","nameField","emailField","pw","confirmpw","redirectSignUp","push","handleSubmit","e","preventDefault","promises","current","value","Promise","all","then","catch","error","alert","finally"],"mappings":"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","sourcesContent":["import { useRef } from 'react';\nimport { auth } from '../firebase/firebase';\nimport { useHistory } from 'react-router-dom';\nimport { customMsg, checkPwMatch } from '../helper/helper';\nimport {\n    updateEmail,\n    updateProfile,\n    updatePassword,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    onAuthStateChanged,\n} from \"firebase/auth\";\nimport AuthMsg from './AuthMsg';\nimport '../styles/Account.css';\n\nconst Account = ({ saveUserName, saveUserEmail, saveUserPassword, displayName, email, acctMsg, setAcctMsg }) => {\n    const history = useHistory();\n    const nameField = useRef();\n    const emailField = useRef();\n    const pw = useRef();\n    const confirmpw = useRef();\n\n    function redirectSignUp() {\n        history.push(`dashboard`);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        // if (checkPwMatch(pw.current.value, confirmpw.current.value) === false) {\n        //     setAcctMsg(<AuthMsg useClass={`auth-error`} msg={customMsg(`auth/confirm-pw-error`)} />);\n        //     return;\n        // }\n        //saveUserName(auth, nameField.current.value);\n        const promises = [];\n        promises.push(updateEmail(auth, emailField.current.value));\n        promises.push(updatePassword(auth, pw.current.value));\n        Promise.all(promises)\n            .then(() => {\n                history.push('/dashboard')\n            })\n            .catch((error) => {\n                alert(error);\n            })\n            .finally(() => {\n            })\n        //await saveUserEmail();\n        //await saveUserPassword(auth, );\n        //redirectSignUp();\n        //window.location.reload();\n    }\n    return (\n        <div className='acct'>\n            <div className='acct-container'>\n                <h1>Update Account Info</h1>\n                {acctMsg}\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <label>First Name</label>\n                    <input ref={nameField} type='text' placeholder='Name' defaultValue={displayName} required></input>\n\n                    <label>Email</label>\n                    <input ref={emailField} type='email' placeholder='Email' defaultValue={email} required></input>\n\n                    <label>Password</label>\n                    <input ref={pw} type='password' minLength='6' placeholder='Password' required></input>\n\n                    <label>Confirm Password</label>\n                    <input ref={confirmpw} type='password' minLength='6' placeholder='Confirm Password' required></input>\n\n                    <input id='acct-submit' type='submit' value='Submit'></input>\n                </form>\n            </div>\n            <div className='overlay'></div>\n        </div >\n    );\n};\n\nexport default Account;"]},"metadata":{},"sourceType":"module"}