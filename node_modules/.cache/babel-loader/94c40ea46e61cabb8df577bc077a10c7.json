{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js\";\nimport { useRef, useMemo, createRef } from 'react';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  document.querySelector('html').style.backgroundImage = `url(${joker})`; //const media = useRef();\n\n  function onClickHand(e) {\n    const [genre,,] = e.target.classList;\n    const filmName = e.target;\n    const elem = getPreviewBar(genre);\n\n    const img = require(`../assets/films/${genre}/${filmName}/large.jpg`);\n\n    console.log(img);\n    elem.style.backgroundImage = `url(${img.default})`;\n    elem.textContent = films.genre.filmName.description;\n    findDescription(genre, filmName);\n\n    function getPreviewBar(genre) {\n      return document.getElementById(genre);\n    }\n\n    function findDescription(genre, filmName) {\n      let val;\n      console.log(genre, filmName); //     for (let key in films) { //children, romance, etc.\n      //         val = films[key].find((item) => item.title === filmName);\n      //         console.log(val);\n      //         // if (val !== undefined) {\n      //         //     return val.description;\n      //         // }\n      //     }\n      // }\n    }\n  }\n\n  function makeMediaBar() {\n    let arr = [];\n\n    for (let key in films) {\n      arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MediaBar, {\n          title: key,\n          onClickHand: onClickHand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: key,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"showText\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this));\n    }\n\n    return arr.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    style: {\n      background: `url(${joker})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainMediaCont\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Watch Joker Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a futile attempt to feel like he's part of the world around him.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mainPlayBtn\",\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), makeMediaBar()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dashboard;\nexport default Dashboard;\n{\n  /* <div ref={media}>\n     <div>\n         <MediaBar title={`children`} onClickHand={onClickHand} />\n         <div id='children'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`drama`} onClickHand={onClickHand} />\n         <div id='drama'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`romance`} onClickHand={onClickHand} />\n         <div id='romance'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`suspense`} onClickHand={onClickHand} />\n         <div id='suspense'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`thriller`} onClickHand={onClickHand} />\n         <div id='thriller'>Hello World</div>\n     </div>\n  </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js"],"names":["useRef","useMemo","createRef","MediaBar","films","joker","Dashboard","document","querySelector","style","backgroundImage","onClickHand","e","genre","target","classList","filmName","elem","getPreviewBar","img","require","console","log","default","textContent","description","findDescription","getElementById","val","makeMediaBar","arr","key","push","map","item","index","background"],"mappings":"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","sourcesContent":["import { useRef, useMemo, createRef } from 'react';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\n\nconst Dashboard = () => {\n    document.querySelector('html').style.backgroundImage = `url(${joker})`;\n    //const media = useRef();\n\n    function onClickHand(e) {\n        const [genre, ,] = e.target.classList;\n        const filmName = e.target;\n        const elem = getPreviewBar(genre);\n        const img = require(`../assets/films/${genre}/${filmName}/large.jpg`);\n        console.log(img);\n        elem.style.backgroundImage = `url(${img.default})`;\n        elem.textContent = films.genre.filmName.description;\n\n        findDescription(genre, filmName);\n\n        function getPreviewBar(genre) {\n            return document.getElementById(genre);\n        }\n\n        function findDescription(genre, filmName) {\n            let val;\n            console.log(genre, filmName);\n            //     for (let key in films) { //children, romance, etc.\n            //         val = films[key].find((item) => item.title === filmName);\n            //         console.log(val);\n            //         // if (val !== undefined) {\n            //         //     return val.description;\n            //         // }\n            //     }\n            // }\n        }\n    }\n\n    function makeMediaBar() {\n        let arr = [];\n        for (let key in films) {\n            arr.push(\n                <div>\n                    <MediaBar title={key} onClickHand={onClickHand} />\n                    <div id={key}>\n                        <div className='showText'></div>\n                    </div>\n                </div>\n            );\n        }\n        return arr.map((item, index) => {\n            return (\n                <div key={index}>\n                    {item}\n                </div>\n            );\n        });\n    }\n\n    return (\n        <div className='dashboard' style={{ background: `url(${joker})` }}>\n            <div className='mainMediaCont'>\n                <div>Watch Joker Now</div>\n                <div>\n                    Forever alone in a crowd, failed comedian Arthur Fleck\n                    seeks connection as he walks the streets of Gotham City.\n                    Arthur wears two masks -- the one he paints for his day job\n                    as a clown, and the guise he projects in a futile attempt to\n                    feel like he's part of the world around him.\n                </div>\n                <button className='mainPlayBtn'>Play</button>\n            </div>\n            {makeMediaBar()}\n        </div >\n    );\n};\n\nexport default Dashboard;\n\n\n{/* <div ref={media}>\n    <div>\n        <MediaBar title={`children`} onClickHand={onClickHand} />\n        <div id='children'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`drama`} onClickHand={onClickHand} />\n        <div id='drama'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`romance`} onClickHand={onClickHand} />\n        <div id='romance'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`suspense`} onClickHand={onClickHand} />\n        <div id='suspense'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`thriller`} onClickHand={onClickHand} />\n        <div id='thriller'>Hello World</div>\n    </div>\n</div> */}"]},"metadata":{},"sourceType":"module"}