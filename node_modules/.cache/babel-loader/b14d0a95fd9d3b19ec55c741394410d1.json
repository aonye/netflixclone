{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport { Link, Redirect, Switch } from 'react-router-dom';\nimport { useRef, useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { collection, addDoc, getDocs } from 'firebase/firestore';\nimport { db, auth } from '../firebase/firebase';\nimport '../styles/SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = props => {\n  _s();\n\n  const {\n    createUser,\n    signedIn,\n    setSignedIn\n  } = props;\n  console.log(signedIn, setSignedIn);\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      const uid = user.uid;\n      console.log(auth.currentUser, 'currentUser');\n      setSignedIn(auth.currentUser); // ...\n    } else {// User is signed out\n      // ...\n    }\n  });\n  const {\n    email\n  } = props;\n  const pw1 = useRef();\n  const pw2 = useRef();\n  const mail = useRef();\n\n  async function handleSubmit() {\n    console.log(pw1.current.value, pw2.current.value, mail.current.value); //const [firstName, email, pw1, pw2] = e.target.childNodes;\n    // if (checkPw(pw1, pw2) === false) {\n    //     console.log('passwords do not match');\n    //     return;\n    // }\n\n    console.log(createUser(mail.current.value, pw1.current.value)); //check if email in database already\n    // setCursor('wait');\n    // console.log('pw match');\n    // await addToDoc(firstName.value, email.value, pw1.value);\n    // console.log('uploaded');\n    // setTimeout(() => {\n    //     setCursor('default');\n    // }, 2000);\n  } // function checkPw(pw1, pw2) {\n  //     return pw1.value === pw2.value ? true : false;\n  // }\n  // function setCursor(val) {\n  //     document.querySelectorAll('*').forEach((elem) => {\n  //         elem.style.cursor = val;\n  //     });\n  // }\n  // async function addToDoc(firstName, email, password) {\n  //     await addDoc(collection(db, 'users'), {\n  //         firstName,\n  //         email,\n  //         password,\n  //     });\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: signedIn !== null ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signUp\",\n      style: {\n        cursor: 'default'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: mail,\n        type: \"email\",\n        placeholder: \"Email Address\",\n        defaultValue: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: pw1,\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: pw2,\n        type: \"password\",\n        placeholder: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Sign Up\",\n        onClick: () => handleSubmit()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Already a user? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signin\",\n          children: \"Sign in now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"FkZGS8d3J1sMcDM6V4OeYRWcEV0=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/SignUp.js"],"names":["Link","Redirect","Switch","useRef","useState","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","collection","addDoc","getDocs","db","auth","SignUp","props","createUser","signedIn","setSignedIn","console","log","user","uid","currentUser","email","pw1","pw2","mail","handleSubmit","current","value","cursor"],"mappings":"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","sourcesContent":["import { Link, Redirect, Switch } from 'react-router-dom';\nimport { useRef, useState } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { collection, addDoc, getDocs } from 'firebase/firestore';\nimport { db, auth } from '../firebase/firebase';\nimport '../styles/SignUp.css';\n\nconst SignUp = (props) => {\n    const { createUser, signedIn, setSignedIn } = props;\n    console.log(signedIn, setSignedIn);\n    onAuthStateChanged(auth, (user) => {\n        if (user) {\n            // User is signed in, see docs for a list of available properties\n            // https://firebase.google.com/docs/reference/js/firebase.User\n            const uid = user.uid;\n            console.log(auth.currentUser, 'currentUser');\n            setSignedIn(auth.currentUser);\n            // ...\n        } else {\n            // User is signed out\n            // ...\n        }\n    });\n    const { email } = props;\n\n    const pw1 = useRef();\n    const pw2 = useRef();\n    const mail = useRef();\n\n    async function handleSubmit() {\n        console.log(pw1.current.value, pw2.current.value, mail.current.value);\n        //const [firstName, email, pw1, pw2] = e.target.childNodes;\n        // if (checkPw(pw1, pw2) === false) {\n        //     console.log('passwords do not match');\n        //     return;\n        // }\n        console.log(createUser(mail.current.value, pw1.current.value));\n        //check if email in database already\n        // setCursor('wait');\n        // console.log('pw match');\n        // await addToDoc(firstName.value, email.value, pw1.value);\n        // console.log('uploaded');\n        // setTimeout(() => {\n        //     setCursor('default');\n        // }, 2000);\n\n    }\n\n    // function checkPw(pw1, pw2) {\n    //     return pw1.value === pw2.value ? true : false;\n    // }\n\n    // function setCursor(val) {\n    //     document.querySelectorAll('*').forEach((elem) => {\n    //         elem.style.cursor = val;\n    //     });\n    // }\n\n    // async function addToDoc(firstName, email, password) {\n    //     await addDoc(collection(db, 'users'), {\n    //         firstName,\n    //         email,\n    //         password,\n    //     });\n    // }\n\n\n\n    return (\n        <div>\n            {signedIn !== null ?\n                <Redirect to='dashboard' /> :\n                <div className='signUp' style={{ cursor: 'default' }}>\n                    <input placeholder='First Name' />\n                    <input ref={mail} type='email' placeholder='Email Address' defaultValue={email} />\n                    <input ref={pw1} type='password' placeholder='Password' />\n                    <input ref={pw2} type='password' placeholder='Confirm Password' />\n                    <input type='button' value='Sign Up' onClick={() => handleSubmit()} />\n                    <div>\n                        Already a user? <Link to='/signin'>Sign in now</Link>\n                    </div>\n                </div>\n            }\n        </div>\n    )\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}