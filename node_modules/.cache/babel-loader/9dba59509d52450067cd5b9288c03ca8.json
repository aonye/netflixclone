{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/routing/Router.js\",\n    _s = $RefreshSig$();\n\nimport { updateProfile, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { useState } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { auth } from '../firebase/firebase';\nimport AuthMsg from '../components/AuthMsg';\nimport SignIn from '../components/SignIn';\nimport SignUp from '../components/SignUp';\nimport Nav from '../components/Nav';\nimport { NavMediaBar, Profile, SignInBtn } from '../components/Nav_components/index';\nimport films from '../assets/films/index';\nimport series from '../assets/series/index';\nimport Home from '../components/Home';\nimport Dashboard from '../components/Dashboard';\nimport Account from '../components/Account';\nimport Username from \"../components/Username\";\nimport Footer from '../components/Footer';\nimport { customMsg } from '../helper/helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Router = props => {\n  _s();\n\n  const [mediaType, setMediaType] = useState({\n    films\n  }); //films default\n\n  const [MTKey, setMTKey] = useState(Object.keys({\n    films\n  }));\n  const [authState, setAuthState] = useState(localStorage.getItem('authState')); //null if not found\n\n  const [displayName, setDN] = useState();\n  const [email, setEmail] = useState(null);\n  const [signInMsg, setSIMsg] = useState(null);\n  const [signUpMsg, setSUMsg] = useState(null);\n  const [acctMsg, setAcctMsg] = useState(null);\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      console.log(user, 'authed');\n      localStorage.setItem('authState', JSON.stringify(user));\n      setDN(user.displayName);\n      setEmail(user.email);\n    } else {\n      console.log(user, 'not authed');\n      localStorage.removeItem('authState');\n    }\n  });\n\n  function PrivateRoute({\n    children,\n    ...rest\n  }) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: () => {\n        return authState !== null ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n  function RouteWrap({\n    children,\n    ...rest\n  }) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: () => {\n        return authState === null ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n  async function createUser(email, password, name) {\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      //const user = userCredential.user;\n      //console.log(user, 'user/createdUser');\n      console.log(auth.currentUser);\n      setAuthState(auth.currentUser);\n      updateProfile(auth.currentUser, {\n        displayName: name\n      }); //setSUMsg(<AuthMsg useClass={'auth-success'} msg={customMsg('auth/sign-up-success')} />);\n    }).catch(error => {\n      const errorCode = error.code; //const errorMessage = error.message;\n      //console.log('error occured', errorCode, errorMessage);\n\n      setSUMsg( /*#__PURE__*/_jsxDEV(AuthMsg, {\n        useClass: `auth-error`,\n        msg: customMsg(errorCode)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 26\n      }, this));\n    });\n  }\n\n  async function signInUser(email, password) {\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      //console.log('sign in successful', userCredential.user);\n      setAuthState(auth.currentUser);\n      setSIMsg( /*#__PURE__*/_jsxDEV(AuthMsg, {\n        useClass: `auth-success`,\n        msg: customMsg('auth/sign-in-success')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 26\n      }, this));\n    }).catch(error => {\n      const errorCode = error.code; //console.log('sign in error', error, errorCode, errorMessage);\n\n      setSIMsg( /*#__PURE__*/_jsxDEV(AuthMsg, {\n        useClass: `auth-error`,\n        msg: customMsg(errorCode)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 26\n      }, this));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(RouteWrap, {\n        exact: true,\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          SignInBtn: /*#__PURE__*/_jsxDEV(SignInBtn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Home, {\n          setEmail: setEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RouteWrap, {\n        exact: true,\n        path: \"/signin\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SignIn, {\n          signInUser: signInUser,\n          signInMsg: signInMsg,\n          setSIMsg: setSIMsg,\n          authState: authState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RouteWrap, {\n        exact: true,\n        path: \"/signup\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SignUp, {\n          email: email,\n          createUser: createUser,\n          signUpMsg: signUpMsg,\n          setSUMsg: setSUMsg,\n          authState: authState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        exact: true,\n        path: \"/dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          NavMediaBar: /*#__PURE__*/_jsxDEV(NavMediaBar, {\n            setMediaType: setMediaType,\n            setMTKey: setMTKey,\n            films: films,\n            series: series\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 38\n          }, this),\n          Profile: /*#__PURE__*/_jsxDEV(Profile, {\n            setAuthState: setAuthState,\n            displayName: displayName,\n            email: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n          mediaType: mediaType,\n          MTKey: MTKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        exact: true,\n        path: \"/account\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Account, {\n          displayName: displayName,\n          email: email,\n          acctMsg: acctMsg,\n          setAcctMsg: setAcctMsg,\n          setEmail: setEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        exact: true,\n        path: \"/username\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Username, {\n          displayName: displayName,\n          setDN: setDN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Router, \"xv1KwUXieIe7CGs3CDJ3bT5ITFI=\");\n\n_c = Router;\nexport default _c2 = withRouter(Router);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Router\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/routing/Router.js"],"names":["updateProfile","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","useState","BrowserRouter","Route","Switch","Redirect","withRouter","auth","AuthMsg","SignIn","SignUp","Nav","NavMediaBar","Profile","SignInBtn","films","series","Home","Dashboard","Account","Username","Footer","customMsg","Router","props","mediaType","setMediaType","MTKey","setMTKey","Object","keys","authState","setAuthState","localStorage","getItem","displayName","setDN","email","setEmail","signInMsg","setSIMsg","signUpMsg","setSUMsg","acctMsg","setAcctMsg","user","console","log","setItem","JSON","stringify","removeItem","PrivateRoute","children","rest","RouteWrap","createUser","password","name","then","userCredential","currentUser","catch","error","errorCode","code","signInUser"],"mappings":"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","sourcesContent":["import {\n    updateProfile,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    onAuthStateChanged,\n} from \"firebase/auth\";\nimport { useState } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { auth } from '../firebase/firebase';\nimport AuthMsg from '../components/AuthMsg';\nimport SignIn from '../components/SignIn';\nimport SignUp from '../components/SignUp';\nimport Nav from '../components/Nav';\nimport { NavMediaBar, Profile, SignInBtn } from '../components/Nav_components/index';\nimport films from '../assets/films/index';\nimport series from '../assets/series/index';\nimport Home from '../components/Home';\nimport Dashboard from '../components/Dashboard';\nimport Account from '../components/Account';\nimport Username from \"../components/Username\";\nimport Footer from '../components/Footer';\nimport { customMsg } from '../helper/helper';\n\nconst Router = (props) => {\n    const [mediaType, setMediaType] = useState({ films }); //films default\n    const [MTKey, setMTKey] = useState(Object.keys({ films }));\n\n    const [authState, setAuthState] = useState(localStorage.getItem('authState')); //null if not found\n    const [displayName, setDN] = useState();\n    const [email, setEmail] = useState(null);\n\n    const [signInMsg, setSIMsg] = useState(null);\n    const [signUpMsg, setSUMsg] = useState(null);\n    const [acctMsg, setAcctMsg] = useState(null);\n\n    onAuthStateChanged(auth, (user) => {\n        if (user) {\n            console.log(user, 'authed');\n            localStorage.setItem('authState', JSON.stringify(user));\n            setDN(user.displayName);\n            setEmail(user.email);\n        } else {\n            console.log(user, 'not authed');\n            localStorage.removeItem('authState');\n        }\n    });\n\n    function PrivateRoute({ children, ...rest }) {\n        return (\n            <Route {...rest} render={() => {\n                return authState !== null\n                    ? children\n                    : <Redirect to='/' />\n            }} />\n        )\n    }\n\n    function RouteWrap({ children, ...rest }) {\n        return (\n            <Route {...rest} render={() => {\n                return authState === null\n                    ? children\n                    : <Redirect to='/dashboard' />\n            }} />\n        );\n    }\n\n    async function createUser(email, password, name) {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                //const user = userCredential.user;\n                //console.log(user, 'user/createdUser');\n                console.log(auth.currentUser);\n                setAuthState(auth.currentUser);\n                updateProfile(auth.currentUser, {\n                    displayName: name,\n                });\n                //setSUMsg(<AuthMsg useClass={'auth-success'} msg={customMsg('auth/sign-up-success')} />);\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                //const errorMessage = error.message;\n                //console.log('error occured', errorCode, errorMessage);\n                setSUMsg(<AuthMsg useClass={`auth-error`} msg={customMsg(errorCode)} />)\n            });\n    }\n\n    async function signInUser(email, password) {\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                //console.log('sign in successful', userCredential.user);\n                setAuthState(auth.currentUser);\n                setSIMsg(<AuthMsg useClass={`auth-success`} msg={customMsg('auth/sign-in-success')} />);\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                //console.log('sign in error', error, errorCode, errorMessage);\n                setSIMsg(<AuthMsg useClass={`auth-error`} msg={customMsg(errorCode)} />);\n            });\n    }\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <RouteWrap exact path='/'>\n                    <Nav\n                        SignInBtn={<SignInBtn />}\n                    />\n                    <Home setEmail={setEmail} />\n                </RouteWrap>\n                <RouteWrap exact path='/signin'>\n                    <Nav />\n                    <SignIn\n                        signInUser={signInUser}\n                        signInMsg={signInMsg}\n                        setSIMsg={setSIMsg}\n                        authState={authState}\n                    />\n                </RouteWrap >\n                <RouteWrap exact path='/signup'>\n                    <Nav />\n                    <SignUp\n                        email={email}\n                        createUser={createUser}\n                        signUpMsg={signUpMsg}\n                        setSUMsg={setSUMsg}\n                        authState={authState}\n                    />\n                </RouteWrap>\n                <PrivateRoute exact path='/dashboard'>\n                    <Nav\n                        NavMediaBar={<NavMediaBar setMediaType={setMediaType} setMTKey={setMTKey} films={films} series={series} />}\n                        Profile={<Profile setAuthState={setAuthState} displayName={displayName} email={email} />}\n                    />\n                    <Dashboard mediaType={mediaType} MTKey={MTKey} />\n                </PrivateRoute>\n                <PrivateRoute exact path='/account'>\n                    <Nav />\n                    <Account\n                        displayName={displayName}\n                        email={email}\n                        acctMsg={acctMsg}\n                        setAcctMsg={setAcctMsg}\n                        setEmail={setEmail}\n                    />\n                </PrivateRoute>\n                <PrivateRoute exact path='/username'>\n                    <Nav />\n                    <Username\n                        displayName={displayName}\n                        setDN={setDN}\n                    />\n                </PrivateRoute>\n            </Switch>\n            <Footer />\n        </BrowserRouter >\n    );\n};\n\nexport default withRouter(Router);"]},"metadata":{},"sourceType":"module"}