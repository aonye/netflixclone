{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Account.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { auth } from '../firebase/firebase';\nimport { useHistory } from 'react-router-dom';\nimport { customMsg, checkPwMatch } from '../helper/helper';\nimport { getAuth, updateEmail, updateProfile, updatePassword, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, reauthenticateWithCredential, EmailAuthProvider } from \"firebase/auth\";\nimport AuthMsg from './AuthMsg';\nimport '../styles/Account.css';\nimport { ConsoleWriter } from 'istanbul-lib-report';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = ({\n  displayName,\n  email,\n  acctMsg,\n  setAcctMsg\n}) => {\n  _s();\n\n  const nameField = useRef();\n  const emailField = useRef();\n  const currentEmail = useRef();\n  const currentPw = useRef();\n  const pw = useRef();\n  const confirmpw = useRef();\n  const [error, setError] = useState(null);\n  const history = useHistory();\n\n  function redirectSignUp() {\n    history.push(`dashboard`);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // if (checkPwMatch(pw.current.value, confirmpw.current.value) === false) {\n    //     setAcctMsg(<AuthMsg useClass={`auth-error`} msg={customMsg(`auth/confirm-pw-error`)} />);\n    //     return;\n    // }\n    //saveUserName(auth, nameField.current.value);\n\n    const cred = EmailAuthProvider.credential(auth.currentUser.email, currentPw.current.value);\n    reauthenticateWithCredential(auth.currentUser, cred).then(() => {// User re-authenticated.\n    }).catch(error => {\n      // An error ocurred\n      setError( /*#__PURE__*/_jsxDEV(AuthMsg, {\n        useClass: `auth-error`,\n        msg: customMsg(error.code)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this));\n      return;\n    }); // console.log('dont print')\n    // const auth = getAuth();\n    // const user = auth.currentUser;\n    // TODO(you): prompt the user to re-provide their sign-in credentials\n    //console.log(credential);\n    // reauthenticateWithCredential(auth.currentUser, credential).then(() => {\n    //     console.log('reauthed');\n    //     // User re-authenticated.\n    // }).catch((error) => {\n    //     // An error ocurred\n    // });\n    // const promises = [];\n    // promises.push(updateEmail(auth.currentUser, emailField.current.value));\n    // promises.push(updatePassword(auth.currentUser, pw.current.value));\n    // Promise.all(promises)\n    //     .then(() => {\n    //         history.push('/dashboard')\n    //     })\n    //     .catch((error) => {\n    //         alert(error);\n    //     })\n    //     .finally(() => {\n    //     })\n    //await saveUserEmail();\n    //await saveUserPassword(auth, );\n    //redirectSignUp();\n    //window.location.reload();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"acct\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"acct-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Update Account Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), error, /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: nameField,\n          type: \"text\",\n          placeholder: \"Name\",\n          defaultValue: displayName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Current Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: currentPw,\n          type: \"password\",\n          placeholder: \"Current Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: emailField,\n          type: \"email\",\n          placeholder: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: pw,\n          type: \"password\",\n          minLength: \"6\",\n          placeholder: \"Leave blank if not updating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: confirmpw,\n          type: \"password\",\n          minLength: \"6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"acct-submit\",\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Account, \"J9kQuSN6xIh+5Ds/zNuizNiYCPY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Account.js"],"names":["useRef","useState","auth","useHistory","customMsg","checkPwMatch","getAuth","updateEmail","updateProfile","updatePassword","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","reauthenticateWithCredential","EmailAuthProvider","AuthMsg","ConsoleWriter","Account","displayName","email","acctMsg","setAcctMsg","nameField","emailField","currentEmail","currentPw","pw","confirmpw","error","setError","history","redirectSignUp","push","handleSubmit","e","preventDefault","cred","credential","currentUser","current","value","then","catch","code"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\nimport { auth } from '../firebase/firebase';\nimport { useHistory } from 'react-router-dom';\nimport { customMsg, checkPwMatch } from '../helper/helper';\nimport {\n    getAuth,\n    updateEmail,\n    updateProfile,\n    updatePassword,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    onAuthStateChanged,\n    reauthenticateWithCredential,\n    EmailAuthProvider,\n} from \"firebase/auth\";\nimport AuthMsg from './AuthMsg';\nimport '../styles/Account.css';\nimport { ConsoleWriter } from 'istanbul-lib-report';\n\nconst Account = ({ displayName, email, acctMsg, setAcctMsg }) => {\n    const nameField = useRef();\n    const emailField = useRef();\n    const currentEmail = useRef();\n    const currentPw = useRef();\n    const pw = useRef();\n    const confirmpw = useRef();\n\n    const [error, setError] = useState(null);\n    const history = useHistory();\n\n    function redirectSignUp() {\n        history.push(`dashboard`);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        // if (checkPwMatch(pw.current.value, confirmpw.current.value) === false) {\n        //     setAcctMsg(<AuthMsg useClass={`auth-error`} msg={customMsg(`auth/confirm-pw-error`)} />);\n        //     return;\n        // }\n        //saveUserName(auth, nameField.current.value);\n        const cred = EmailAuthProvider.credential(auth.currentUser.email, currentPw.current.value);\n        reauthenticateWithCredential(auth.currentUser, cred).then(() => {\n            // User re-authenticated.\n        }).catch((error) => {\n            // An error ocurred\n            setError(<AuthMsg useClass={`auth-error`} msg={customMsg(error.code)} />);\n            return;\n        });\n\n        // console.log('dont print')\n        // const auth = getAuth();\n        // const user = auth.currentUser;\n\n        // TODO(you): prompt the user to re-provide their sign-in credentials\n        //console.log(credential);\n\n\n        // reauthenticateWithCredential(auth.currentUser, credential).then(() => {\n        //     console.log('reauthed');\n        //     // User re-authenticated.\n        // }).catch((error) => {\n        //     // An error ocurred\n        // });\n\n\n        // const promises = [];\n        // promises.push(updateEmail(auth.currentUser, emailField.current.value));\n        // promises.push(updatePassword(auth.currentUser, pw.current.value));\n        // Promise.all(promises)\n        //     .then(() => {\n        //         history.push('/dashboard')\n        //     })\n        //     .catch((error) => {\n        //         alert(error);\n        //     })\n        //     .finally(() => {\n        //     })\n        //await saveUserEmail();\n        //await saveUserPassword(auth, );\n        //redirectSignUp();\n        //window.location.reload();\n    }\n    return (\n        <div className='acct'>\n            <div className='acct-container'>\n                <h1>Update Account Info</h1>\n                {error}\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <label>First Name</label>\n                    <input ref={nameField} type='text' placeholder='Name' defaultValue={displayName} required></input>\n\n                    <label>Current Password</label>\n                    <input ref={currentPw} type='password' placeholder='Current Password' required></input>\n\n                    <label>New Email</label>\n                    <input ref={emailField} type='email' placeholder='Email' required></input>\n\n                    <label>New Password</label>\n                    <input ref={pw} type='password' minLength='6' placeholder='Leave blank if not updating'></input>\n\n                    <label>Confirm New Password</label>\n                    <input ref={confirmpw} type='password' minLength='6'></input>\n\n                    <input id='acct-submit' type='submit' value='Submit'></input>\n                </form>\n            </div>\n            <div className='overlay'></div>\n        </div >\n    );\n};\n\nexport default Account;"]},"metadata":{},"sourceType":"module"}