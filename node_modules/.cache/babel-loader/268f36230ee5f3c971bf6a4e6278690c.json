{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js\";\nimport { useRef, useMemo, createRef } from 'react';\nimport { capitalizeFirstLetter } from '../helper/helper';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  document.querySelector('html').style.backgroundImage = `url(${joker})`; //const media = useRef();\n\n  function onClickHand(e) {\n    const [genre,,] = e.target.classList;\n    const filmName = e.target.alt;\n    const elem = getPreviewBar(genre);\n    const descript = getDescript(genre, filmName);\n\n    const img = require(`../assets/films/${genre}/${filmName}/large.jpg`);\n\n    elem.style.backgroundImage = `url(${img.default})`;\n    elem.textContent = descript;\n\n    function getPreviewBar(genre) {\n      return document.getElementById(genre);\n    }\n\n    function getDescript(genre, filmName) {\n      return films[genre].find(item => {\n        return item.title === filmName;\n      }).description;\n    }\n  }\n\n  function makeMediaBar() {\n    let arr = [];\n\n    for (let key in films) {\n      arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mediaTitle\",\n          children: capitalizeFirstLetter(key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MediaBar, {\n          title: key,\n          onClickHand: onClickHand,\n          hoverHand: hoverHand,\n          mouseOutHand: mouseOutHand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: key,\n          className: \"bigPreview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"showText\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => playVideo(e),\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this));\n    }\n\n    return arr.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  async function playVideo(e) {\n    console.log(e.target.parentNode.style);\n    const url = 'https://api.themoviedb.org/3/movie/550?api_key=6570a26341e47014d7ae8da875015c6d&language=en-US';\n    const x = await fetch(url);\n    fetch(url).then(response => {\n      // handle the response\n      console.log(response.text(), 'resp');\n    }).catch(error => {\n      console.log(error, 'error'); // handle the error\n    });\n  }\n\n  function hoverHand(e) {\n    const preview = e.target.nextElementSibling; //preview.setAttribute('style', 'display:block');\n    //preview.setAttribute('style', 'transform: scale(1.2)');\n    //e.target.setAttribute('style', 'transform: scale(1.2)');\n\n    e.target.classList.add('cardImgHover');\n  }\n\n  function mouseOutHand(e) {\n    const preview = e.target.nextElementSibling; //preview.setAttribute('style', 'display: none');\n    //e.target.setAttribute('style', 'transform: scale(1.0)');\n\n    e.target.classList.remove('cardImgHover');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    style: {\n      background: `url(${joker})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainMediaCont\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Watch Joker Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a futile attempt to feel like he's part of the world around him.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mainPlayBtn\",\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), makeMediaBar(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlayPlayer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dashboard;\nexport default Dashboard;\n{\n  /* <div ref={media}>\n     <div>\n         <MediaBar title={`children`} onClickHand={onClickHand} />\n         <div id='children'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`drama`} onClickHand={onClickHand} />\n         <div id='drama'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`romance`} onClickHand={onClickHand} />\n         <div id='romance'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`suspense`} onClickHand={onClickHand} />\n         <div id='suspense'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`thriller`} onClickHand={onClickHand} />\n         <div id='thriller'>Hello World</div>\n     </div>\n  </div> */\n} // <div className='previewCont'>\n//     <p className='previewTitle'>{configTitle(item.title)}</p>\n//     <p>{item.description}</p>\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js"],"names":["useRef","useMemo","createRef","capitalizeFirstLetter","MediaBar","films","joker","Dashboard","document","querySelector","style","backgroundImage","onClickHand","e","genre","target","classList","filmName","alt","elem","getPreviewBar","descript","getDescript","img","require","default","textContent","getElementById","find","item","title","description","makeMediaBar","arr","key","push","hoverHand","mouseOutHand","playVideo","map","index","console","log","parentNode","url","x","fetch","then","response","text","catch","error","preview","nextElementSibling","add","remove","background"],"mappings":"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","sourcesContent":["import { useRef, useMemo, createRef } from 'react';\nimport { capitalizeFirstLetter } from '../helper/helper';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\n\nconst Dashboard = () => {\n    document.querySelector('html').style.backgroundImage = `url(${joker})`;\n    //const media = useRef();\n\n    function onClickHand(e) {\n        const [genre, ,] = e.target.classList;\n        const filmName = e.target.alt;\n        const elem = getPreviewBar(genre);\n        const descript = getDescript(genre, filmName);\n        const img = require(`../assets/films/${genre}/${filmName}/large.jpg`);\n        elem.style.backgroundImage = `url(${img.default})`;\n        elem.textContent = descript;\n\n\n        function getPreviewBar(genre) {\n            return document.getElementById(genre);\n        }\n\n        function getDescript(genre, filmName) {\n            return films[genre].find((item) => {\n                return item.title === filmName;\n            }).description;\n        }\n\n    }\n\n    function makeMediaBar() {\n        let arr = [];\n        for (let key in films) {\n            arr.push(\n                <div>\n                    <div className='mediaTitle'>{capitalizeFirstLetter(key)}</div>\n                    <MediaBar title={key} onClickHand={onClickHand} hoverHand={hoverHand} mouseOutHand={mouseOutHand} />\n                    <div id={key} className='bigPreview'>\n                        <div className='showText'></div>\n                        <button onClick={(e) => playVideo(e)}>Play</button>\n                    </div>\n                </div>\n            );\n        }\n        return arr.map((item, index) => {\n            return (\n                <div key={index}>\n                    {item}\n                </div>\n            );\n        });\n    }\n\n    async function playVideo(e) {\n        console.log(e.target.parentNode.style);\n        const url = 'https://api.themoviedb.org/3/movie/550?api_key=6570a26341e47014d7ae8da875015c6d&language=en-US';\n        const x = await fetch(url);\n        fetch(url).then(response => {\n            // handle the response\n            console.log(response.text(), 'resp');\n        })\n            .catch(error => {\n                console.log(error, 'error');\n                // handle the error\n            });\n\n    }\n\n    function hoverHand(e) {\n        const preview = e.target.nextElementSibling;\n        //preview.setAttribute('style', 'display:block');\n        //preview.setAttribute('style', 'transform: scale(1.2)');\n        //e.target.setAttribute('style', 'transform: scale(1.2)');\n        e.target.classList.add('cardImgHover');\n    }\n\n    function mouseOutHand(e) {\n        const preview = e.target.nextElementSibling;\n        //preview.setAttribute('style', 'display: none');\n        //e.target.setAttribute('style', 'transform: scale(1.0)');\n        e.target.classList.remove('cardImgHover');\n    }\n\n    return (\n        <div className='dashboard' style={{ background: `url(${joker})` }}>\n            <div className='mainMediaCont'>\n                <div>Watch Joker Now</div>\n                <div>\n                    Forever alone in a crowd, failed comedian Arthur Fleck\n                    seeks connection as he walks the streets of Gotham City.\n                    Arthur wears two masks -- the one he paints for his day job\n                    as a clown, and the guise he projects in a futile attempt to\n                    feel like he's part of the world around him.\n                </div>\n                <button className='mainPlayBtn'>Play</button>\n            </div>\n            {makeMediaBar()}\n            <div className='overlayPlayer'></div>\n        </div >\n    );\n};\n\nexport default Dashboard;\n\n\n{/* <div ref={media}>\n    <div>\n        <MediaBar title={`children`} onClickHand={onClickHand} />\n        <div id='children'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`drama`} onClickHand={onClickHand} />\n        <div id='drama'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`romance`} onClickHand={onClickHand} />\n        <div id='romance'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`suspense`} onClickHand={onClickHand} />\n        <div id='suspense'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`thriller`} onClickHand={onClickHand} />\n        <div id='thriller'>Hello World</div>\n    </div>\n</div> */}\n\n\n    // <div className='previewCont'>\n    //     <p className='previewTitle'>{configTitle(item.title)}</p>\n    //     <p>{item.description}</p>\n    // </div>"]},"metadata":{},"sourceType":"module"}