{"ast":null,"code":"import _regeneratorRuntime from\"/home/yeandyy/Documents/the_odin_project/netflixclone/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/yeandyy/Documents/the_odin_project/netflixclone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/yeandyy/Documents/the_odin_project/netflixclone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState}from'react';import{auth}from'../firebase/firebase';import{useHistory}from'react-router-dom';import{customMsg}from'../helper/helper';import{updateEmail,updatePassword,reauthenticateWithCredential,EmailAuthProvider}from\"firebase/auth\";import AuthMsg from'./AuthMsg';import'../styles/Account.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Account=function Account(_ref){var setEmail=_ref.setEmail,email=_ref.email;var emailField=useRef();var currentPw=useRef();var pw=useRef();var confirmPw=useRef();var _useState=useState(null),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var history=useHistory();function redirectSignUp(){history.push(\"dashboard\");}function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var promiseArr,cred,checkEmail,checkPassword;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:checkPassword=function _checkPassword(promiseArr){if(pw.current.value!==confirmPw.current.value){setError(/*#__PURE__*/_jsx(AuthMsg,{useClass:\"auth-error\",msg:customMsg(\"New passwords must match.\")}));throw new Error();}if(pw.current.value===currentPw.current.value){setError(/*#__PURE__*/_jsx(AuthMsg,{useClass:\"auth-error\",msg:customMsg(\"New password cannot be the same as current.\")}));throw new Error();}promiseArr.push(updatePassword(auth.currentUser,pw.current.value));};checkEmail=function _checkEmail(promiseArr){if(auth.currentUser.email!==emailField.current.value){promiseArr.push(updateEmail(auth.currentUser,emailField.current.value));}};e.preventDefault();promiseArr=[];cred=EmailAuthProvider.credential(auth.currentUser.email,currentPw.current.value);reauthenticateWithCredential(auth.currentUser,cred).then(function(){// User re-authed.\ncheckPassword(promiseArr);checkEmail(promiseArr);Promise.all(promiseArr).then(function(){console.log('success');setEmail(emailField.current.value);redirectSignUp();}).catch(function(error){setError(/*#__PURE__*/_jsx(AuthMsg,{useClass:\"auth-error\",msg:customMsg(\"\".concat(error))}));});}).catch(function(error){// An error ocurred\nconsole.log(error.code);if(error.code){setError(/*#__PURE__*/_jsx(AuthMsg,{useClass:\"auth-error\",msg:customMsg(error.code)}));}return;});case 6:case\"end\":return _context.stop();}}},_callee);}));return _handleSubmit.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"acct\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"acct-container\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Update Account Info\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Leave fields blank if not updating\"})]}),error,/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(e){return handleSubmit(e);},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Current Password\"}),/*#__PURE__*/_jsx(\"input\",{ref:currentPw,type:\"password\",placeholder:\"Current Password\",required:true}),/*#__PURE__*/_jsx(\"label\",{children:\"New Email\"}),/*#__PURE__*/_jsx(\"input\",{ref:emailField,type:\"email\",placeholder:\"Email\"}),/*#__PURE__*/_jsx(\"label\",{children:\"New Password\"}),/*#__PURE__*/_jsx(\"input\",{ref:pw,type:\"password\",minLength:\"6\",placeholder:\"Password\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Confirm New Password\"}),/*#__PURE__*/_jsx(\"input\",{ref:confirmPw,type:\"password\",minLength:\"6\",placeholder:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"acct-submit\",type:\"submit\",value:\"Submit\"}),/*#__PURE__*/_jsx(\"a\",{href:\"/dashboard\",children:\"Go back\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"overlay\"})]});};export default Account;","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Account.js"],"names":["useRef","useState","auth","useHistory","customMsg","updateEmail","updatePassword","reauthenticateWithCredential","EmailAuthProvider","AuthMsg","Account","setEmail","email","emailField","currentPw","pw","confirmPw","error","setError","history","redirectSignUp","push","handleSubmit","e","checkEmail","checkPassword","promiseArr","current","value","Error","currentUser","preventDefault","cred","credential","then","Promise","all","console","log","catch","code"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\nimport { auth } from '../firebase/firebase';\nimport { useHistory } from 'react-router-dom';\nimport { customMsg } from '../helper/helper';\nimport {\n    updateEmail,\n    updatePassword,\n    reauthenticateWithCredential,\n    EmailAuthProvider,\n} from \"firebase/auth\";\nimport AuthMsg from './AuthMsg';\nimport '../styles/Account.css';\n\nconst Account = ({ setEmail, email }) => {\n    const emailField = useRef();\n    const currentPw = useRef();\n    const pw = useRef();\n    const confirmPw = useRef();\n\n    const [error, setError] = useState(null);\n    const history = useHistory();\n\n    function redirectSignUp() {\n        history.push(`dashboard`);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        const promiseArr = [];\n        const cred = EmailAuthProvider.credential(auth.currentUser.email, currentPw.current.value);\n        reauthenticateWithCredential(auth.currentUser, cred).then(() => {\n            // User re-authed.\n            checkPassword(promiseArr);\n            checkEmail(promiseArr);\n            Promise.all(promiseArr)\n                .then(() => {\n                    console.log('success');\n                    setEmail(emailField.current.value);\n                    redirectSignUp();\n                })\n                .catch((error) => {\n                    setError(<AuthMsg useClass={`auth-error`} msg={customMsg(`${error}`)} />);\n                })\n        }).catch((error) => {\n            // An error ocurred\n            console.log(error.code);\n            if (error.code) {\n                setError(<AuthMsg useClass={`auth-error`} msg={customMsg(error.code)} />);\n            }\n            return;\n        });\n\n        function checkEmail(promiseArr) {\n            if (auth.currentUser.email !== emailField.current.value) {\n                promiseArr.push(updateEmail(auth.currentUser, emailField.current.value));\n            }\n        }\n\n        function checkPassword(promiseArr) {\n            if (pw.current.value !== confirmPw.current.value) {\n                setError(<AuthMsg useClass={`auth-error`} msg={customMsg(`New passwords must match.`)} />);\n                throw new Error();\n            }\n            if (pw.current.value === currentPw.current.value) {\n                setError(<AuthMsg useClass={`auth-error`} msg={customMsg(`New password cannot be the same as current.`)} />);\n                throw new Error();\n            }\n            promiseArr.push(updatePassword(auth.currentUser, pw.current.value));\n        }\n    }\n\n    return (\n        <div className='acct'>\n            <div className='acct-container'>\n                <div>\n                    <h1>Update Account Info</h1>\n                    <h2>Leave fields blank if not updating</h2>\n                </div>\n                {error}\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <label>Current Password</label>\n                    <input ref={currentPw} type='password' placeholder='Current Password' required></input>\n                    <label>New Email</label>\n                    <input ref={emailField} type='email' placeholder='Email'></input>\n                    <label>New Password</label>\n                    <input ref={pw} type='password' minLength='6' placeholder='Password'></input>\n                    <label>Confirm New Password</label>\n                    <input ref={confirmPw} type='password' minLength='6' placeholder='Confirm Password'></input>\n                    <input id='acct-submit' type='submit' value='Submit'></input>\n                    <a href='/dashboard'>Go back</a>\n                </form>\n\n            </div>\n            <div className='overlay'></div>\n        </div >\n    );\n};\n\nexport default Account;"]},"metadata":{},"sourceType":"module"}