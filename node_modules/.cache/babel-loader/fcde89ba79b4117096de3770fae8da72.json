{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useMemo, createRef, useState } from 'react';\nimport { capitalizeFirstLetter } from '../helper/helper';\nimport YoutubeEmbed from './YoutubeEmbed';\nimport MainMedia from './MainMedia';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [currentMedia, setCurrentMedia] = useState(null);\n\n  function onClickHand(e) {\n    const [genre,,] = e.target.classList;\n    const filmName = e.target.alt;\n    const x = document.getElementById(`${genre}Preview`);\n    const catalog = films[genre].find(item => item.title === filmName);\n    setCurrentMedia(genre);\n    setMedia( /*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n      embedId: catalog.YTLink,\n      stopPlayHand: stopPlayHand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 18\n    }, this)); //x.append(<YoutubeEmbed embedId={'NE8tlDeSLmk'} />)\n    // const elem = getPreviewBar(genre);\n    // const descript = getDescript(genre, filmName);\n    // const img = require(`../assets/films/${genre}/${filmName}/large.jpg`);\n    // elem.style.backgroundImage = `url(${img.default})`;\n    // elem.textContent = descript;\n\n    function getPreviewBar(genre) {\n      return document.getElementById(genre);\n    }\n\n    function getDescript(genre, filmName) {\n      return films[genre].find(item => {\n        return item.title === filmName;\n      }).description;\n    }\n  }\n\n  function hoverPlayBtn(e) {\n    e.target.classList.add('hover');\n  }\n\n  function hoverOffPlayBtn(e) {\n    e.target.classList.remove('hover');\n  }\n\n  function playBtnClickHand(e, url) {\n    setMedia( /*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n      embedId: url,\n      stopPlayHand: stopPlayHand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this));\n  }\n\n  function stopPlayHand(e) {\n    setMedia(null);\n  }\n\n  function makeMediaBar() {\n    let arr = [];\n\n    for (let key in films) {\n      arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mediaTitle\",\n          children: capitalizeFirstLetter(key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MediaBar, {\n          title: key,\n          onClickHand: onClickHand,\n          hoverHand: hoverHand,\n          mouseOutHand: mouseOutHand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `${key}Preview`,\n          className: \"bigPreview\",\n          children: currentMedia === key ? y : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this));\n    }\n\n    return arr.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  async function playVideo(e) {\n    console.log(e.target.parentNode.style);\n    const url = 'https://api.themoviedb.org/3/movie/550?api_key=6570a26341e47014d7ae8da875015c6d&language=en-US';\n    const x = await fetch(url);\n    const y = await x.text();\n    console.log(y);\n  }\n\n  function hoverHand(e) {\n    e.target.classList.add('cardImgHover');\n  }\n\n  function mouseOutHand(e) {\n    e.target.classList.remove('cardImgHover');\n  } //style={{ background: `url(${joker})` }}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(MainMedia, {\n      display: `joker`,\n      hoverPlayBtn: hoverPlayBtn,\n      hoverOffPlayBtn: hoverOffPlayBtn,\n      playBtnClickHand: playBtnClickHand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media\",\n      children: makeMediaBar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), media]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"WKee1g1eln9hlkOgspr6BNLmSyk=\");\n\n_c = Dashboard;\nexport default Dashboard;\n{\n  /* <div ref={media}>\n     <div>\n         <MediaBar title={`children`} onClickHand={onClickHand} />\n         <div id='children'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`drama`} onClickHand={onClickHand} />\n         <div id='drama'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`romance`} onClickHand={onClickHand} />\n         <div id='romance'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`suspense`} onClickHand={onClickHand} />\n         <div id='suspense'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`thriller`} onClickHand={onClickHand} />\n         <div id='thriller'>Hello World</div>\n     </div>\n  </div> */\n} // <div className='previewCont'>\n//     <p className='previewTitle'>{configTitle(item.title)}</p>\n//     <p>{item.description}</p>\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js"],"names":["useRef","useMemo","createRef","useState","capitalizeFirstLetter","YoutubeEmbed","MainMedia","MediaBar","films","joker","Dashboard","currentMedia","setCurrentMedia","onClickHand","e","genre","target","classList","filmName","alt","x","document","getElementById","catalog","find","item","title","setMedia","YTLink","stopPlayHand","getPreviewBar","getDescript","description","hoverPlayBtn","add","hoverOffPlayBtn","remove","playBtnClickHand","url","makeMediaBar","arr","key","push","hoverHand","mouseOutHand","y","map","index","playVideo","console","log","parentNode","style","fetch","text","media"],"mappings":"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","sourcesContent":["import { useRef, useMemo, createRef, useState } from 'react';\nimport { capitalizeFirstLetter } from '../helper/helper';\nimport YoutubeEmbed from './YoutubeEmbed';\nimport MainMedia from './MainMedia';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\n\nconst Dashboard = () => {\n    const [currentMedia, setCurrentMedia] = useState(null);\n\n    function onClickHand(e) {\n        const [genre, ,] = e.target.classList;\n        const filmName = e.target.alt;\n        const x = document.getElementById(`${genre}Preview`);\n        const catalog = films[genre].find((item) => item.title === filmName);\n        setCurrentMedia(genre);\n        setMedia(<YoutubeEmbed embedId={catalog.YTLink} stopPlayHand={stopPlayHand} />);\n        //x.append(<YoutubeEmbed embedId={'NE8tlDeSLmk'} />)\n\n\n        // const elem = getPreviewBar(genre);\n        // const descript = getDescript(genre, filmName);\n        // const img = require(`../assets/films/${genre}/${filmName}/large.jpg`);\n        // elem.style.backgroundImage = `url(${img.default})`;\n        // elem.textContent = descript;\n\n\n        function getPreviewBar(genre) {\n            return document.getElementById(genre);\n        }\n\n        function getDescript(genre, filmName) {\n            return films[genre].find((item) => {\n                return item.title === filmName;\n            }).description;\n        }\n\n    }\n\n    function hoverPlayBtn(e) {\n        e.target.classList.add('hover');\n    }\n\n    function hoverOffPlayBtn(e) {\n        e.target.classList.remove('hover');\n    }\n\n    function playBtnClickHand(e, url) {\n        setMedia(<YoutubeEmbed embedId={url} stopPlayHand={stopPlayHand} />);\n    }\n\n    function stopPlayHand(e) {\n        setMedia(null);\n    }\n\n    function makeMediaBar() {\n        let arr = [];\n        for (let key in films) {\n            arr.push(\n                <div>\n                    <div className='mediaTitle'>{capitalizeFirstLetter(key)}</div>\n                    <MediaBar\n                        title={key}\n                        onClickHand={onClickHand}\n                        hoverHand={hoverHand}\n                        mouseOutHand={mouseOutHand}\n                    />\n                    <div id={`${key}Preview`} className='bigPreview'>\n                        {currentMedia === key ? y : null}\n                    </div>\n                </div>\n            );\n        }\n        return arr.map((item, index) => {\n            return (\n                <div key={index}>\n                    {item}\n                </div>\n            );\n        });\n    }\n\n    async function playVideo(e) {\n        console.log(e.target.parentNode.style);\n        const url = 'https://api.themoviedb.org/3/movie/550?api_key=6570a26341e47014d7ae8da875015c6d&language=en-US';\n        const x = await fetch(url);\n        const y = await x.text();\n        console.log(y);\n    }\n\n    function hoverHand(e) {\n        e.target.classList.add('cardImgHover');\n    }\n\n    function mouseOutHand(e) {\n        e.target.classList.remove('cardImgHover');\n    }\n\n    //style={{ background: `url(${joker})` }}\n\n    return (\n        <div className='dashboard'>\n            <MainMedia\n                display={`joker`}\n                hoverPlayBtn={hoverPlayBtn}\n                hoverOffPlayBtn={hoverOffPlayBtn}\n                playBtnClickHand={playBtnClickHand} />\n            <div className='media'>\n                {makeMediaBar()}\n            </div>\n            {media}\n        </div >\n    );\n};\n\nexport default Dashboard;\n\n\n{/* <div ref={media}>\n    <div>\n        <MediaBar title={`children`} onClickHand={onClickHand} />\n        <div id='children'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`drama`} onClickHand={onClickHand} />\n        <div id='drama'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`romance`} onClickHand={onClickHand} />\n        <div id='romance'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`suspense`} onClickHand={onClickHand} />\n        <div id='suspense'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`thriller`} onClickHand={onClickHand} />\n        <div id='thriller'>Hello World</div>\n    </div>\n</div> */}\n\n\n    // <div className='previewCont'>\n    //     <p className='previewTitle'>{configTitle(item.title)}</p>\n    //     <p>{item.description}</p>\n    // </div>"]},"metadata":{},"sourceType":"module"}