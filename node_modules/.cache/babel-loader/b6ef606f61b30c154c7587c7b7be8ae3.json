{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js\";\nimport { useRef, useMemo, createRef } from 'react';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  document.querySelector('html').style.backgroundImage = `url(${joker})`; //const media = useRef();\n\n  function onClickHand(e) {\n    const [genre,,] = e.target.classList;\n    const filmName = e.target.alt;\n    const elem = getPreviewBar(genre);\n    const descript = getDescript(genre, filmName);\n\n    const img = require(`../assets/films/${genre}/${filmName}/large.jpg`);\n\n    elem.style.backgroundImage = `url(${img.default})`;\n    elem.textContent = descript;\n\n    function getPreviewBar(genre) {\n      return document.getElementById(genre);\n    }\n\n    function getDescript(genre, filmName) {\n      return films[genre].find(item => {\n        return item.title === filmName;\n      }).description;\n    }\n  }\n\n  function makeMediaBar() {\n    let arr = [];\n\n    for (let key in films) {\n      arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MediaBar, {\n          title: key,\n          onClickHand: onClickHand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: key,\n          className: \"bigPreview\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"showText\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this));\n    }\n\n    return arr.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  function hoverHand(e) {\n    const preview = e.target.nextElementSibling; //preview.setAttribute('style', 'display:block');\n    //preview.setAttribute('style', 'transform: scale(1.2)');\n    //e.target.setAttribute('style', 'transform: scale(1.2)');\n\n    e.target.classList.add('cardImgHover');\n  }\n\n  function hoverOutHand(e) {\n    const preview = e.target.nextElementSibling; //preview.setAttribute('style', 'display: none');\n    //e.target.setAttribute('style', 'transform: scale(1.0)');\n\n    e.target.classList.remove('cardImgHover');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    style: {\n      background: `url(${joker})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainMediaCont\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Watch Joker Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a futile attempt to feel like he's part of the world around him.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mainPlayBtn\",\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), makeMediaBar(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlayPlayer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dashboard;\nexport default Dashboard;\n{\n  /* <div ref={media}>\n     <div>\n         <MediaBar title={`children`} onClickHand={onClickHand} />\n         <div id='children'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`drama`} onClickHand={onClickHand} />\n         <div id='drama'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`romance`} onClickHand={onClickHand} />\n         <div id='romance'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`suspense`} onClickHand={onClickHand} />\n         <div id='suspense'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`thriller`} onClickHand={onClickHand} />\n         <div id='thriller'>Hello World</div>\n     </div>\n  </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js"],"names":["useRef","useMemo","createRef","MediaBar","films","joker","Dashboard","document","querySelector","style","backgroundImage","onClickHand","e","genre","target","classList","filmName","alt","elem","getPreviewBar","descript","getDescript","img","require","default","textContent","getElementById","find","item","title","description","makeMediaBar","arr","key","push","map","index","hoverHand","preview","nextElementSibling","add","hoverOutHand","remove","background"],"mappings":"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","sourcesContent":["import { useRef, useMemo, createRef } from 'react';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\n\nconst Dashboard = () => {\n    document.querySelector('html').style.backgroundImage = `url(${joker})`;\n    //const media = useRef();\n\n    function onClickHand(e) {\n        const [genre, ,] = e.target.classList;\n        const filmName = e.target.alt;\n        const elem = getPreviewBar(genre);\n        const descript = getDescript(genre, filmName);\n        const img = require(`../assets/films/${genre}/${filmName}/large.jpg`);\n        elem.style.backgroundImage = `url(${img.default})`;\n        elem.textContent = descript;\n\n\n        function getPreviewBar(genre) {\n            return document.getElementById(genre);\n        }\n\n        function getDescript(genre, filmName) {\n            return films[genre].find((item) => {\n                return item.title === filmName;\n            }).description;\n        }\n\n    }\n\n    function makeMediaBar() {\n        let arr = [];\n        for (let key in films) {\n            arr.push(\n                <div>\n                    <MediaBar title={key} onClickHand={onClickHand} />\n                    <div id={key} className='bigPreview'>\n                        <div className='showText'></div>\n                        <button>Play</button>\n                    </div>\n                </div>\n            );\n        }\n        return arr.map((item, index) => {\n            return (\n                <div key={index}>\n                    {item}\n                </div>\n            );\n        });\n    }\n\n    function hoverHand(e) {\n        const preview = e.target.nextElementSibling;\n        //preview.setAttribute('style', 'display:block');\n        //preview.setAttribute('style', 'transform: scale(1.2)');\n        //e.target.setAttribute('style', 'transform: scale(1.2)');\n        e.target.classList.add('cardImgHover');\n    }\n\n    function hoverOutHand(e) {\n        const preview = e.target.nextElementSibling;\n        //preview.setAttribute('style', 'display: none');\n        //e.target.setAttribute('style', 'transform: scale(1.0)');\n        e.target.classList.remove('cardImgHover');\n\n    }\n\n    return (\n        <div className='dashboard' style={{ background: `url(${joker})` }}>\n            <div className='mainMediaCont'>\n                <div>Watch Joker Now</div>\n                <div>\n                    Forever alone in a crowd, failed comedian Arthur Fleck\n                    seeks connection as he walks the streets of Gotham City.\n                    Arthur wears two masks -- the one he paints for his day job\n                    as a clown, and the guise he projects in a futile attempt to\n                    feel like he's part of the world around him.\n                </div>\n                <button className='mainPlayBtn'>Play</button>\n            </div>\n            {makeMediaBar()}\n            <div className='overlayPlayer'></div>\n        </div >\n    );\n};\n\nexport default Dashboard;\n\n\n{/* <div ref={media}>\n    <div>\n        <MediaBar title={`children`} onClickHand={onClickHand} />\n        <div id='children'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`drama`} onClickHand={onClickHand} />\n        <div id='drama'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`romance`} onClickHand={onClickHand} />\n        <div id='romance'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`suspense`} onClickHand={onClickHand} />\n        <div id='suspense'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`thriller`} onClickHand={onClickHand} />\n        <div id='thriller'>Hello World</div>\n    </div>\n</div> */}"]},"metadata":{},"sourceType":"module"}