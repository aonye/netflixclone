{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/routing/Router.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { updateProfile, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { db, auth } from '../firebase/firebase';\nimport { SIError, SISuccess, SUError, SUSuccess } from '../components/AuthMsgs';\nimport SignIn from '../components/SignIn';\nimport SignUp from '../components/SignUp';\nimport Nav from '../components/Nav';\nimport films from '../assets/films/index';\nimport series from '../assets/series/index';\nimport Home from '../components/Home';\nimport Dashboard from '../components/Dashboard';\nimport Account from '../components/Account';\nimport Footer from '../components/Footer';\nimport { customMsg } from '../helper/helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Router = props => {\n  _s();\n\n  const [mediaType, setMediaType] = useState({\n    films\n  });\n  const [MTKey, setMTKey] = useState(Object.keys({\n    films\n  }));\n  const [authState, setAuthState] = useState(localStorage.getItem('authState'));\n  const [email, setEmail] = useState(null);\n  const [name, setName] = useState(null);\n  const [signInMsg, setSIMsg] = useState(null);\n  const [signUpMsg, setSUMsg] = useState(null);\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      const uid = user.uid;\n      user.displayName = name; //saveUserInfo(uid, name);\n\n      console.log('authed, router.js');\n      setAuthState(true);\n      setEmail(auth.currentUser.email);\n      localStorage.setItem('authState', true);\n    } else {\n      // User is signed out\n      setSIMsg(null);\n      setSUMsg(null);\n    }\n  });\n\n  async function saveUserName(uid, name) {\n    updateProfile(user, {\n      displayName: \"Jane Q. User\",\n      photoURL: \"https://example.com/jane-q-user/profile.jpg\"\n    }).then(() => {// Profile updated!\n      // ...\n    }).catch(error => {// An error occurred\n      // ...\n    });\n    await setDoc(doc(db, 'netflix-users', `${uid}`), {\n      name: name,\n      userID: uid\n    });\n  }\n\n  function PrivateRoute({\n    children,\n    ...rest\n  }) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: () => {\n        return authState !== null ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n  async function createUser(email, password, name) {\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      //const user = userCredential.user;\n      //console.log(user, 'user/createdUser');\n      setName(name);\n      setSUMsg( /*#__PURE__*/_jsxDEV(SUSuccess, {\n        msg: customMsg('auth/sign-up-success')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 26\n      }, this));\n    }).catch(error => {\n      const errorCode = error.code; //const errorMessage = error.message;\n      //console.log('error occured', errorCode, errorMessage);\n\n      setSUMsg( /*#__PURE__*/_jsxDEV(SUError, {\n        msg: customMsg(errorCode)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 26\n      }, this));\n    });\n  }\n\n  async function signInUser(email, password) {\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      //console.log('sign in successful', userCredential.user);\n      setSIMsg( /*#__PURE__*/_jsxDEV(SISuccess, {\n        msg: customMsg('auth/sign-in-success')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 26\n      }, this));\n    }).catch(error => {\n      const errorCode = error.code; //const errorMessage = error.message;\n      //console.log('sign in error', error, errorCode, errorMessage);\n\n      setSIMsg( /*#__PURE__*/_jsxDEV(SIError, {\n        msg: customMsg(errorCode)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 26\n      }, this));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: authState === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            setEmail: setEmail,\n            showSignInBtn: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Home, {\n            email: email,\n            setEmail: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        exact: true,\n        path: \"/dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          email: email,\n          setEmail: setEmail,\n          setAuthState: setAuthState,\n          setMediaType: setMediaType,\n          setMTKey: setMTKey,\n          films: films,\n          series: series,\n          showNavMB: true,\n          showProfile: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n          mediaType: mediaType,\n          MTKey: MTKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        exact: true,\n        path: \"/account\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          setEmail: setEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Account, {\n          auth: auth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        children: authState === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            setEmail: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SignIn, {\n            signInUser: signInUser,\n            signInMsg: signInMsg,\n            setSIMsg: setSIMsg,\n            authState: authState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signup\",\n        children: authState === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Nav, {\n            setEmail: setEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SignUp, {\n            email: email,\n            createUser: createUser,\n            signUpMsg: signUpMsg,\n            setSUMsg: setSUMsg,\n            authState: authState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Router, \"tUlt2AXb3YHsvF4F58lwS27dK6c=\");\n\n_c = Router;\nexport default _c2 = withRouter(Router);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Router\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/routing/Router.js"],"names":["useState","BrowserRouter","Route","Switch","Redirect","withRouter","doc","setDoc","updateProfile","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","db","auth","SIError","SISuccess","SUError","SUSuccess","SignIn","SignUp","Nav","films","series","Home","Dashboard","Account","Footer","customMsg","Router","props","mediaType","setMediaType","MTKey","setMTKey","Object","keys","authState","setAuthState","localStorage","getItem","email","setEmail","name","setName","signInMsg","setSIMsg","signUpMsg","setSUMsg","user","uid","displayName","console","log","currentUser","setItem","saveUserName","photoURL","then","catch","error","userID","PrivateRoute","children","rest","createUser","password","userCredential","errorCode","code","signInUser"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { updateProfile, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { db, auth } from '../firebase/firebase';\nimport { SIError, SISuccess, SUError, SUSuccess } from '../components/AuthMsgs';\nimport SignIn from '../components/SignIn';\nimport SignUp from '../components/SignUp';\nimport Nav from '../components/Nav';\nimport films from '../assets/films/index';\nimport series from '../assets/series/index';\nimport Home from '../components/Home';\nimport Dashboard from '../components/Dashboard';\nimport Account from '../components/Account';\nimport Footer from '../components/Footer';\nimport { customMsg } from '../helper/helper';\n\nconst Router = (props) => {\n    const [mediaType, setMediaType] = useState({ films });\n    const [MTKey, setMTKey] = useState(Object.keys({ films }));\n    const [authState, setAuthState] = useState(localStorage.getItem('authState'));\n    const [email, setEmail] = useState(null);\n    const [name, setName] = useState(null);\n    const [signInMsg, setSIMsg] = useState(null);\n    const [signUpMsg, setSUMsg] = useState(null);\n\n    onAuthStateChanged(auth, (user) => {\n        if (user) {\n            // User is signed in, see docs for a list of available properties\n            // https://firebase.google.com/docs/reference/js/firebase.User\n            const uid = user.uid;\n            user.displayName = name;\n            //saveUserInfo(uid, name);\n            console.log('authed, router.js');\n            setAuthState(true);\n            setEmail(auth.currentUser.email);\n            localStorage.setItem('authState', true);\n        } else {\n            // User is signed out\n            setSIMsg(null);\n            setSUMsg(null);\n        }\n    });\n\n    async function saveUserName(uid, name) {\n        updateProfile(user, {\n            displayName: \"Jane Q. User\", photoURL: \"https://example.com/jane-q-user/profile.jpg\"\n        }).then(() => {\n            // Profile updated!\n            // ...\n        }).catch((error) => {\n            // An error occurred\n            // ...\n        });\n\n        await setDoc(doc(db, 'netflix-users', `${uid}`), {\n            name: name,\n            userID: uid,\n        });\n    }\n\n    function PrivateRoute({ children, ...rest }) {\n        return (\n            <Route {...rest} render={() => {\n                return authState !== null\n                    ? children\n                    : <Redirect to='/' />\n            }} />\n        )\n    }\n\n    async function createUser(email, password, name) {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                //const user = userCredential.user;\n                //console.log(user, 'user/createdUser');\n                setName(name);\n                setSUMsg(<SUSuccess msg={customMsg('auth/sign-up-success')} />);\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                //const errorMessage = error.message;\n                //console.log('error occured', errorCode, errorMessage);\n                setSUMsg(<SUError msg={customMsg(errorCode)} />)\n            });\n\n    }\n\n    async function signInUser(email, password) {\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                //console.log('sign in successful', userCredential.user);\n                setSIMsg(<SISuccess msg={customMsg('auth/sign-in-success')} />);\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                //const errorMessage = error.message;\n                //console.log('sign in error', error, errorCode, errorMessage);\n                setSIMsg(<SIError msg={customMsg(errorCode)} />);\n            });\n    }\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path='/'>\n                    {authState === null ?\n                        (\n                            <div>\n                                <Nav setEmail={setEmail} showSignInBtn={true} />\n                                <Home email={email} setEmail={setEmail} />\n                            </div>\n                        ) :\n                        <Redirect to='/dashboard' />\n                    }\n                </Route>\n                <PrivateRoute exact path='/dashboard'>\n                    <Nav\n                        email={email}\n                        setEmail={setEmail}\n                        setAuthState={setAuthState}\n                        setMediaType={setMediaType}\n                        setMTKey={setMTKey}\n                        films={films}\n                        series={series}\n                        showNavMB={true}\n                        showProfile={true}\n                    />\n                    <Dashboard mediaType={mediaType} MTKey={MTKey} />\n                </PrivateRoute>\n                <PrivateRoute exact path='/account'>\n                    <Nav setEmail={setEmail} />\n                    <Account auth={auth} />\n                </PrivateRoute>\n                <Route exact path='/signin'>\n                    {authState === null ?\n                        <div>\n                            <Nav setEmail={setEmail} />\n                            <SignIn\n                                signInUser={signInUser}\n                                signInMsg={signInMsg}\n                                setSIMsg={setSIMsg}\n                                authState={authState}\n                            />\n                        </div>\n                        : <Redirect to='/dashboard' />\n                    }\n                </Route>\n                <Route exact path='/signup'>\n                    {authState === null ?\n                        <div>\n                            <Nav setEmail={setEmail} />\n                            <SignUp\n                                email={email}\n                                createUser={createUser}\n                                signUpMsg={signUpMsg}\n                                setSUMsg={setSUMsg}\n                                authState={authState}\n                            />\n                        </div>\n                        : <Redirect to='/dashboard' />\n                    }\n                </Route>\n            </Switch>\n            <Footer />\n        </BrowserRouter >\n    );\n};\n\nexport default withRouter(Router);"]},"metadata":{},"sourceType":"module"}