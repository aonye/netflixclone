{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useMemo, createRef, useState } from 'react';\nimport { capitalizeFirstLetter } from '../helper/helper';\nimport YoutubeEmbed from './YoutubeEmbed';\nimport MainMedia from './MainMedia';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  //document.querySelector('html').style.backgroundImage = `url(${joker})`;\n  const [currentMedia, setCurrentMedia] = useState(null);\n  const [y, setY] = useState(null);\n  const [z, setZ] = useState(null);\n\n  function onClickHand(e) {\n    const [genre,,] = e.target.classList;\n    const filmName = e.target.alt;\n    const x = document.getElementById(`${genre}Preview`);\n    const catalog = films[genre].find(item => item.title === filmName);\n    setCurrentMedia(genre);\n    setY( /*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n      embedId: catalog.YTLink\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this)); //x.append(<YoutubeEmbed embedId={'NE8tlDeSLmk'} />)\n    // const elem = getPreviewBar(genre);\n    // const descript = getDescript(genre, filmName);\n    // const img = require(`../assets/films/${genre}/${filmName}/large.jpg`);\n    // elem.style.backgroundImage = `url(${img.default})`;\n    // elem.textContent = descript;\n\n    function getPreviewBar(genre) {\n      return document.getElementById(genre);\n    }\n\n    function getDescript(genre, filmName) {\n      return films[genre].find(item => {\n        return item.title === filmName;\n      }).description;\n    }\n  }\n\n  function hoverPlayBtn(e) {\n    e.target.classList.add('hover');\n  }\n\n  function hoverOffPlayBtn(e) {\n    e.target.classList.remove('hover');\n  }\n\n  function playBtnClickHand(e, url) {\n    setZ( /*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n      embedId: url,\n      stopPlayHand: stopPlayHand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this));\n  }\n\n  function stopPlayHand(e) {\n    setZ(null);\n  }\n\n  function Video() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"900\",\n        height: \"400\",\n        src: \"https://www.youtube.com/embed/Z59dZw5yuNQ\",\n        title: \"YouTube video player\",\n        frameborder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowfullscreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n  function makeMediaBar() {\n    let arr = [];\n\n    for (let key in films) {\n      arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mediaTitle\",\n          children: capitalizeFirstLetter(key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MediaBar, {\n          title: key,\n          onClickHand: onClickHand,\n          hoverHand: hoverHand,\n          mouseOutHand: mouseOutHand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `${key}Preview`,\n          className: \"bigPreview\",\n          children: currentMedia === key ? y : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this));\n    }\n\n    return arr.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  async function playVideo(e) {\n    console.log(e.target.parentNode.style);\n    const url = 'https://api.themoviedb.org/3/movie/550?api_key=6570a26341e47014d7ae8da875015c6d&language=en-US';\n    const x = await fetch(url);\n    const y = await x.text();\n    console.log(y);\n  }\n\n  function hoverHand(e) {\n    const preview = e.target.nextElementSibling; //preview.setAttribute('style', 'display:block');\n    //preview.setAttribute('style', 'transform: scale(1.2)');\n    //e.target.setAttribute('style', 'transform: scale(1.2)');\n\n    e.target.classList.add('cardImgHover');\n  }\n\n  function mouseOutHand(e) {\n    const preview = e.target.nextElementSibling; //preview.setAttribute('style', 'display: none');\n    //e.target.setAttribute('style', 'transform: scale(1.0)');\n\n    e.target.classList.remove('cardImgHover');\n  } //style={{ background: `url(${joker})` }}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(MainMedia, {\n      display: `joker`,\n      hoverPlayBtn: hoverPlayBtn,\n      hoverOffPlayBtn: hoverOffPlayBtn,\n      playBtnClickHand: playBtnClickHand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media\",\n      children: makeMediaBar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), z]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"vCNR+TzmZ4PyyMh76OLHWz9FsN8=\");\n\n_c = Dashboard;\nexport default Dashboard;\n{\n  /* <div ref={media}>\n     <div>\n         <MediaBar title={`children`} onClickHand={onClickHand} />\n         <div id='children'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`drama`} onClickHand={onClickHand} />\n         <div id='drama'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`romance`} onClickHand={onClickHand} />\n         <div id='romance'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`suspense`} onClickHand={onClickHand} />\n         <div id='suspense'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`thriller`} onClickHand={onClickHand} />\n         <div id='thriller'>Hello World</div>\n     </div>\n  </div> */\n} // <div className='previewCont'>\n//     <p className='previewTitle'>{configTitle(item.title)}</p>\n//     <p>{item.description}</p>\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js"],"names":["useRef","useMemo","createRef","useState","capitalizeFirstLetter","YoutubeEmbed","MainMedia","MediaBar","films","joker","Dashboard","currentMedia","setCurrentMedia","y","setY","z","setZ","onClickHand","e","genre","target","classList","filmName","alt","x","document","getElementById","catalog","find","item","title","YTLink","getPreviewBar","getDescript","description","hoverPlayBtn","add","hoverOffPlayBtn","remove","playBtnClickHand","url","stopPlayHand","Video","makeMediaBar","arr","key","push","hoverHand","mouseOutHand","map","index","playVideo","console","log","parentNode","style","fetch","text","preview","nextElementSibling"],"mappings":"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","sourcesContent":["import { useRef, useMemo, createRef, useState } from 'react';\nimport { capitalizeFirstLetter } from '../helper/helper';\nimport YoutubeEmbed from './YoutubeEmbed';\nimport MainMedia from './MainMedia';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\n\nconst Dashboard = () => {\n    //document.querySelector('html').style.backgroundImage = `url(${joker})`;\n    const [currentMedia, setCurrentMedia] = useState(null);\n    const [y, setY] = useState(null);\n    const [z, setZ] = useState(null);\n\n    function onClickHand(e) {\n        const [genre, ,] = e.target.classList;\n        const filmName = e.target.alt;\n        const x = document.getElementById(`${genre}Preview`);\n        const catalog = films[genre].find((item) => item.title === filmName);\n        setCurrentMedia(genre);\n        setY(<YoutubeEmbed embedId={catalog.YTLink} />);\n        //x.append(<YoutubeEmbed embedId={'NE8tlDeSLmk'} />)\n\n\n        // const elem = getPreviewBar(genre);\n        // const descript = getDescript(genre, filmName);\n        // const img = require(`../assets/films/${genre}/${filmName}/large.jpg`);\n        // elem.style.backgroundImage = `url(${img.default})`;\n        // elem.textContent = descript;\n\n\n        function getPreviewBar(genre) {\n            return document.getElementById(genre);\n        }\n\n        function getDescript(genre, filmName) {\n            return films[genre].find((item) => {\n                return item.title === filmName;\n            }).description;\n        }\n\n    }\n\n    function hoverPlayBtn(e) {\n        e.target.classList.add('hover');\n    }\n\n    function hoverOffPlayBtn(e) {\n        e.target.classList.remove('hover');\n    }\n\n    function playBtnClickHand(e, url) {\n        setZ(<YoutubeEmbed embedId={url} stopPlayHand={stopPlayHand} />);\n    }\n\n    function stopPlayHand(e) {\n        setZ(null);\n    }\n\n    function Video() {\n        return (\n            <div className='video-responsive'>\n                <iframe\n                    width=\"900\"\n                    height=\"400\"\n                    src=\"https://www.youtube.com/embed/Z59dZw5yuNQ\"\n                    title=\"YouTube video player\"\n                    frameborder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowfullscreen >\n                </iframe>\n            </div>\n        );\n    }\n\n    function makeMediaBar() {\n        let arr = [];\n        for (let key in films) {\n            arr.push(\n                <div>\n                    <div className='mediaTitle'>{capitalizeFirstLetter(key)}</div>\n                    <MediaBar title={key} onClickHand={onClickHand} hoverHand={hoverHand} mouseOutHand={mouseOutHand} />\n                    <div id={`${key}Preview`} className='bigPreview'>\n                        {currentMedia === key ? y : null}\n                    </div>\n                </div>\n            );\n        }\n        return arr.map((item, index) => {\n            return (\n                <div key={index}>\n                    {item}\n                </div>\n            );\n        });\n    }\n\n    async function playVideo(e) {\n        console.log(e.target.parentNode.style);\n        const url = 'https://api.themoviedb.org/3/movie/550?api_key=6570a26341e47014d7ae8da875015c6d&language=en-US';\n        const x = await fetch(url);\n        const y = await x.text();\n        console.log(y);\n    }\n\n    function hoverHand(e) {\n        const preview = e.target.nextElementSibling;\n        //preview.setAttribute('style', 'display:block');\n        //preview.setAttribute('style', 'transform: scale(1.2)');\n        //e.target.setAttribute('style', 'transform: scale(1.2)');\n        e.target.classList.add('cardImgHover');\n    }\n\n    function mouseOutHand(e) {\n        const preview = e.target.nextElementSibling;\n        //preview.setAttribute('style', 'display: none');\n        //e.target.setAttribute('style', 'transform: scale(1.0)');\n        e.target.classList.remove('cardImgHover');\n    }\n\n    //style={{ background: `url(${joker})` }}\n\n    return (\n        <div className='dashboard'>\n            <MainMedia\n                display={`joker`}\n                hoverPlayBtn={hoverPlayBtn}\n                hoverOffPlayBtn={hoverOffPlayBtn}\n                playBtnClickHand={playBtnClickHand} />\n            <div className='media'>\n                {makeMediaBar()}\n            </div>\n            {z}\n        </div >\n    );\n};\n\nexport default Dashboard;\n\n\n{/* <div ref={media}>\n    <div>\n        <MediaBar title={`children`} onClickHand={onClickHand} />\n        <div id='children'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`drama`} onClickHand={onClickHand} />\n        <div id='drama'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`romance`} onClickHand={onClickHand} />\n        <div id='romance'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`suspense`} onClickHand={onClickHand} />\n        <div id='suspense'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`thriller`} onClickHand={onClickHand} />\n        <div id='thriller'>Hello World</div>\n    </div>\n</div> */}\n\n\n    // <div className='previewCont'>\n    //     <p className='previewTitle'>{configTitle(item.title)}</p>\n    //     <p>{item.description}</p>\n    // </div>"]},"metadata":{},"sourceType":"module"}