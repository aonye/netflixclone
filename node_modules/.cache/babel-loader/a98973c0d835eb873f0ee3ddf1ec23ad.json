{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport { Link, Switch } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { collection, addDoc, getDocs } from 'firebase/firestore';\nimport { db, users } from '../firebase/firebase';\nimport '../styles/SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = props => {\n  _s();\n\n  const {\n    email\n  } = props;\n  const pw1 = useRef();\n  const pw2 = useRef();\n  const mail = useRef();\n\n  async function handleSubmit() {\n    console.log(pw1.current.value, pw2.current.value, mail.current.value); //const [firstName, email, pw1, pw2] = e.target.childNodes;\n    // if (checkPw(pw1, pw2) === false) {\n    //     console.log('passwords do not match');\n    //     return;\n    // }\n    //authUser(email, pw1);\n    //check if email in database already\n    // setCursor('wait');\n    // console.log('pw match');\n    // await addToDoc(firstName.value, email.value, pw1.value);\n    // console.log('uploaded');\n    // setTimeout(() => {\n    //     setCursor('default');\n    // }, 2000);\n  }\n\n  function checkPw(pw1, pw2) {\n    return pw1.value === pw2.value ? true : false;\n  }\n\n  function setCursor(val) {\n    document.querySelectorAll('*').forEach(elem => {\n      elem.style.cursor = val;\n    });\n  }\n\n  async function addToDoc(firstName, email, password) {\n    await addDoc(collection(db, 'users'), {\n      firstName,\n      email,\n      password\n    });\n  }\n\n  async function authUser(email, password) {\n    console.log('in fxn');\n    const auth = getAuth();\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      // Signed in \n      console.log(userCredential);\n      const user = userCredential.user; // ...\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode, errorMessage); // ..\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signUp\",\n    style: {\n      cursor: 'default'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: mail,\n      type: \"email\",\n      placeholder: \"Email Address\",\n      defaultValue: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: pw1,\n      type: \"password\",\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: pw2,\n      type: \"password\",\n      placeholder: \"Confirm Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Sign Up\",\n      onClick: () => handleSubmit()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Already a user? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signin\",\n        children: \"Sign in now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"FkZGS8d3J1sMcDM6V4OeYRWcEV0=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/SignUp.js"],"names":["Link","Switch","useRef","getAuth","createUserWithEmailAndPassword","collection","addDoc","getDocs","db","users","SignUp","props","email","pw1","pw2","mail","handleSubmit","console","log","current","value","checkPw","setCursor","val","document","querySelectorAll","forEach","elem","style","cursor","addToDoc","firstName","password","authUser","auth","then","userCredential","user","catch","error","errorCode","code","errorMessage","message"],"mappings":"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","sourcesContent":["import { Link, Switch } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { collection, addDoc, getDocs } from 'firebase/firestore';\nimport { db, users } from '../firebase/firebase';\nimport '../styles/SignUp.css';\n\nconst SignUp = (props) => {\n    const { email } = props;\n\n    const pw1 = useRef();\n    const pw2 = useRef();\n    const mail = useRef();\n\n    async function handleSubmit() {\n        console.log(pw1.current.value, pw2.current.value, mail.current.value);\n        //const [firstName, email, pw1, pw2] = e.target.childNodes;\n        // if (checkPw(pw1, pw2) === false) {\n        //     console.log('passwords do not match');\n        //     return;\n        // }\n        //authUser(email, pw1);\n        //check if email in database already\n        // setCursor('wait');\n        // console.log('pw match');\n        // await addToDoc(firstName.value, email.value, pw1.value);\n        // console.log('uploaded');\n        // setTimeout(() => {\n        //     setCursor('default');\n        // }, 2000);\n\n    }\n\n    function checkPw(pw1, pw2) {\n        return pw1.value === pw2.value ? true : false;\n    }\n\n    function setCursor(val) {\n        document.querySelectorAll('*').forEach((elem) => {\n            elem.style.cursor = val;\n        });\n    }\n\n    async function addToDoc(firstName, email, password) {\n        await addDoc(collection(db, 'users'), {\n            firstName,\n            email,\n            password,\n        });\n    }\n\n    async function authUser(email, password) {\n        console.log('in fxn')\n        const auth = getAuth();\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                // Signed in \n                console.log(userCredential);\n                const user = userCredential.user;\n                // ...\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                console.log(errorCode, errorMessage);\n                // ..\n            });\n    }\n\n    return (\n        <div className='signUp' style={{ cursor: 'default' }}>\n            <input placeholder='First Name' />\n            <input ref={mail} type='email' placeholder='Email Address' defaultValue={email} />\n            <input ref={pw1} type='password' placeholder='Password' />\n            <input ref={pw2} type='password' placeholder='Confirm Password' />\n            <input type='button' value='Sign Up' onClick={() => handleSubmit()} />\n            <div>\n                Already a user? <Link to='/signin'>Sign in now</Link>\n            </div>\n        </div>\n    )\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}