{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useMemo, createRef, useState } from 'react';\nimport { capitalizeFirstLetter } from '../helper/helper';\nimport YoutubeEmbed from './YoutubeEmbed';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  document.querySelector('html').style.backgroundImage = `url(${joker})`; //const media = useRef();\n\n  const [y, setY] = useState(null);\n\n  function onClickHand(e) {\n    console.log(e.target);\n    const [genre,,] = e.target.classList;\n    const x = document.getElementById(`${genre}Preview`); //console.log(films[genre].find((item) => item.title ==);\n    //setY(<YoutubeEmbed embedId={'NE8tlDeSLmk'} />);\n    //x.append(<YoutubeEmbed embedId={'NE8tlDeSLmk'} />)\n    // const filmName = e.target.alt;\n    // const elem = getPreviewBar(genre);\n    // const descript = getDescript(genre, filmName);\n    // const img = require(`../assets/films/${genre}/${filmName}/large.jpg`);\n    // elem.style.backgroundImage = `url(${img.default})`;\n    // elem.textContent = descript;\n\n    function getPreviewBar(genre) {\n      return document.getElementById(genre);\n    }\n\n    function getDescript(genre, filmName) {\n      return films[genre].find(item => {\n        return item.title === filmName;\n      }).description;\n    }\n  }\n\n  function makeMediaBar() {\n    let arr = [];\n\n    for (let key in films) {\n      arr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mediaTitle\",\n          children: capitalizeFirstLetter(key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MediaBar, {\n          title: key,\n          onClickHand: onClickHand,\n          hoverHand: hoverHand,\n          mouseOutHand: mouseOutHand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: `${key}Preview`,\n          className: \"bigPreview\",\n          children: [y, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"showText\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => playVideo(e),\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this));\n    }\n\n    return arr.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  async function playVideo(e) {\n    console.log(e.target.parentNode.style);\n    const url = 'https://api.themoviedb.org/3/movie/550?api_key=6570a26341e47014d7ae8da875015c6d&language=en-US';\n    const x = await fetch(url);\n    const y = await x.text();\n    console.log(y);\n  }\n\n  function hoverHand(e) {\n    const preview = e.target.nextElementSibling; //preview.setAttribute('style', 'display:block');\n    //preview.setAttribute('style', 'transform: scale(1.2)');\n    //e.target.setAttribute('style', 'transform: scale(1.2)');\n\n    e.target.classList.add('cardImgHover');\n  }\n\n  function mouseOutHand(e) {\n    const preview = e.target.nextElementSibling; //preview.setAttribute('style', 'display: none');\n    //e.target.setAttribute('style', 'transform: scale(1.0)');\n\n    e.target.classList.remove('cardImgHover');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    style: {\n      background: `url(${joker})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainMediaCont\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Watch Joker Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a futile attempt to feel like he's part of the world around him.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mainPlayBtn\",\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), makeMediaBar(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlayPlayer\",\n      children: /*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n        embedId: 'ShjSplbL3FQ'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"cASXZ8pmGGklYJH65Gb9cGZma20=\");\n\n_c = Dashboard;\nexport default Dashboard;\n{\n  /* <div ref={media}>\n     <div>\n         <MediaBar title={`children`} onClickHand={onClickHand} />\n         <div id='children'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`drama`} onClickHand={onClickHand} />\n         <div id='drama'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`romance`} onClickHand={onClickHand} />\n         <div id='romance'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`suspense`} onClickHand={onClickHand} />\n         <div id='suspense'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`thriller`} onClickHand={onClickHand} />\n         <div id='thriller'>Hello World</div>\n     </div>\n  </div> */\n} // <div className='previewCont'>\n//     <p className='previewTitle'>{configTitle(item.title)}</p>\n//     <p>{item.description}</p>\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js"],"names":["useRef","useMemo","createRef","useState","capitalizeFirstLetter","YoutubeEmbed","MediaBar","films","joker","Dashboard","document","querySelector","style","backgroundImage","y","setY","onClickHand","e","console","log","target","genre","classList","x","getElementById","getPreviewBar","getDescript","filmName","find","item","title","description","makeMediaBar","arr","key","push","hoverHand","mouseOutHand","playVideo","map","index","parentNode","url","fetch","text","preview","nextElementSibling","add","remove","background"],"mappings":"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","sourcesContent":["import { useRef, useMemo, createRef, useState } from 'react';\nimport { capitalizeFirstLetter } from '../helper/helper';\nimport YoutubeEmbed from './YoutubeEmbed';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\n\nconst Dashboard = () => {\n    document.querySelector('html').style.backgroundImage = `url(${joker})`;\n    //const media = useRef();\n    const [y, setY] = useState(null);\n\n    function onClickHand(e) {\n        console.log(e.target);\n        const [genre, ,] = e.target.classList;\n        const x = document.getElementById(`${genre}Preview`);\n        //console.log(films[genre].find((item) => item.title ==);\n        //setY(<YoutubeEmbed embedId={'NE8tlDeSLmk'} />);\n        //x.append(<YoutubeEmbed embedId={'NE8tlDeSLmk'} />)\n\n        // const filmName = e.target.alt;\n        // const elem = getPreviewBar(genre);\n        // const descript = getDescript(genre, filmName);\n        // const img = require(`../assets/films/${genre}/${filmName}/large.jpg`);\n        // elem.style.backgroundImage = `url(${img.default})`;\n        // elem.textContent = descript;\n\n\n        function getPreviewBar(genre) {\n            return document.getElementById(genre);\n        }\n\n        function getDescript(genre, filmName) {\n            return films[genre].find((item) => {\n                return item.title === filmName;\n            }).description;\n        }\n\n    }\n\n    function makeMediaBar() {\n        let arr = [];\n        for (let key in films) {\n            arr.push(\n                <div>\n                    <div className='mediaTitle'>{capitalizeFirstLetter(key)}</div>\n                    <MediaBar title={key} onClickHand={onClickHand} hoverHand={hoverHand} mouseOutHand={mouseOutHand} />\n                    <div id={`${key}Preview`} className='bigPreview'>\n                        {y}\n                        <div className='showText'></div>\n                        <button onClick={(e) => playVideo(e)}>Play</button>\n                    </div>\n                </div>\n            );\n        }\n        return arr.map((item, index) => {\n            return (\n                <div key={index}>\n                    {item}\n                </div>\n            );\n        });\n    }\n\n    async function playVideo(e) {\n        console.log(e.target.parentNode.style);\n        const url = 'https://api.themoviedb.org/3/movie/550?api_key=6570a26341e47014d7ae8da875015c6d&language=en-US';\n        const x = await fetch(url);\n        const y = await x.text();\n        console.log(y);\n\n    }\n\n    function hoverHand(e) {\n        const preview = e.target.nextElementSibling;\n        //preview.setAttribute('style', 'display:block');\n        //preview.setAttribute('style', 'transform: scale(1.2)');\n        //e.target.setAttribute('style', 'transform: scale(1.2)');\n        e.target.classList.add('cardImgHover');\n    }\n\n    function mouseOutHand(e) {\n        const preview = e.target.nextElementSibling;\n        //preview.setAttribute('style', 'display: none');\n        //e.target.setAttribute('style', 'transform: scale(1.0)');\n        e.target.classList.remove('cardImgHover');\n    }\n\n    return (\n        <div className='dashboard' style={{ background: `url(${joker})` }}>\n            <div className='mainMediaCont'>\n                <div>Watch Joker Now</div>\n                <div>\n                    Forever alone in a crowd, failed comedian Arthur Fleck\n                    seeks connection as he walks the streets of Gotham City.\n                    Arthur wears two masks -- the one he paints for his day job\n                    as a clown, and the guise he projects in a futile attempt to\n                    feel like he's part of the world around him.\n                </div>\n                <button className='mainPlayBtn'>Play</button>\n            </div>\n            {makeMediaBar()}\n            <div className='overlayPlayer'>\n                <YoutubeEmbed embedId={'ShjSplbL3FQ'} />\n            </div>\n        </div >\n    );\n};\n\nexport default Dashboard;\n\n\n{/* <div ref={media}>\n    <div>\n        <MediaBar title={`children`} onClickHand={onClickHand} />\n        <div id='children'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`drama`} onClickHand={onClickHand} />\n        <div id='drama'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`romance`} onClickHand={onClickHand} />\n        <div id='romance'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`suspense`} onClickHand={onClickHand} />\n        <div id='suspense'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`thriller`} onClickHand={onClickHand} />\n        <div id='thriller'>Hello World</div>\n    </div>\n</div> */}\n\n\n    // <div className='previewCont'>\n    //     <p className='previewTitle'>{configTitle(item.title)}</p>\n    //     <p>{item.description}</p>\n    // </div>"]},"metadata":{},"sourceType":"module"}