{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/routing/Router.js\",\n    _s = $RefreshSig$();\n\nimport { updateEmail, updateProfile, updatePassword, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { useState } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { auth } from '../firebase/firebase';\nimport AuthMsg from '../components/AuthMsg';\nimport SignIn from '../components/SignIn';\nimport SignUp from '../components/SignUp';\nimport Nav from '../components/Nav';\nimport { NavMediaBar, Profile, SignInBtn, SignOutBtn } from '../components/Nav_components/index';\nimport films from '../assets/films/index';\nimport series from '../assets/series/index';\nimport Home from '../components/Home';\nimport Dashboard from '../components/Dashboard';\nimport Account from '../components/Account';\nimport Footer from '../components/Footer';\nimport { customMsg } from '../helper/helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Router = props => {\n  _s();\n\n  const [mediaType, setMediaType] = useState({\n    films\n  }); //films default\n\n  const [MTKey, setMTKey] = useState(Object.keys({\n    films\n  }));\n  const [authState, setAuthState] = useState(localStorage.getItem('authState')); //account params\n\n  const [displayName, setDN] = useState();\n  const [email, setEmail] = useState(null);\n  const [signInMsg, setSIMsg] = useState(null);\n  const [signUpMsg, setSUMsg] = useState(null);\n  const [acctMsg, setAcctMsg] = useState(null);\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      console.log(user, 'authed');\n      localStorage.setItem('authState', JSON.stringify(user));\n      setEmail(user.email);\n    } else {\n      localStorage.removeItem('authState');\n    }\n  });\n  onAuthStateChanged(authUser => {\n    if (authUser) {} else {}\n  });\n\n  async function saveUserName(authObj, name) {\n    updateProfile(authObj.currentUser, {\n      displayName: `${name}`\n    }).then(() => {\n      console.log('username saved'); // ...\n    }).catch(error => {\n      // An error occurred\n      // ...\n      console.log(error, 'error updating profile');\n    });\n  }\n\n  async function saveUserEmail(authObj, email) {\n    updateEmail(authObj.currentUser, `${email}`).then(() => {// Email updated!\n    }).catch(error => {\n      // An error occurred\n      console.log(error, 'error updating email');\n    });\n  }\n\n  async function saveUserPassword(authObj, pw) {\n    updatePassword(authObj.currentUser, `${pw}`).then(() => {\n      console.log('pw updated'); // Update successful.\n    }).catch(error => {\n      // An error ocurred\n      console.log(error, 'error updating pw');\n    });\n  }\n\n  function PrivateRoute({\n    children,\n    ...rest\n  }) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: () => {\n        return authState !== null ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n  function RouteWrap({\n    children,\n    ...rest\n  }) {\n    return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: () => {\n        return authState === null ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 23\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n  async function createUser(email, password, name) {\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      //const user = userCredential.user;\n      //console.log(user, 'user/createdUser');\n      console.log(auth.currentUser);\n      setAuthState(auth.currentUser); //setSUMsg(<AuthMsg useClass={'auth-success'} msg={customMsg('auth/sign-up-success')} />);\n    }).catch(error => {\n      const errorCode = error.code; //const errorMessage = error.message;\n      //console.log('error occured', errorCode, errorMessage);\n\n      setSUMsg( /*#__PURE__*/_jsxDEV(AuthMsg, {\n        useClass: `auth-error`,\n        msg: customMsg(errorCode)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 26\n      }, this));\n    });\n  }\n\n  async function signInUser(email, password) {\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      //console.log('sign in successful', userCredential.user);\n      console.log(auth.currentUser);\n      setAuthState(auth.currentUser); //setSIMsg(<AuthMsg useClass={`auth-success`} msg={customMsg('auth/sign-in-success')} />);\n    }).catch(error => {\n      const errorCode = error.code; //const errorMessage = error.message;\n      //console.log('sign in error', error, errorCode, errorMessage);\n\n      setSIMsg( /*#__PURE__*/_jsxDEV(AuthMsg, {\n        useClass: `auth-error`,\n        msg: customMsg(errorCode)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 26\n      }, this));\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(RouteWrap, {\n        exact: true,\n        path: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          SignInBtn: /*#__PURE__*/_jsxDEV(SignInBtn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Home, {\n          setEmail: setEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RouteWrap, {\n        exact: true,\n        path: \"/signin\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SignIn, {\n          signInUser: signInUser,\n          signInMsg: signInMsg,\n          setSIMsg: setSIMsg,\n          authState: authState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RouteWrap, {\n        exact: true,\n        path: \"/signup\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SignUp, {\n          email: email,\n          createUser: createUser,\n          signUpMsg: signUpMsg,\n          setSUMsg: setSUMsg,\n          authState: authState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        exact: true,\n        path: \"/dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          NavMediaBar: /*#__PURE__*/_jsxDEV(NavMediaBar, {\n            setMediaType: setMediaType,\n            setMTKey: setMTKey,\n            films: films,\n            series: series\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 38\n          }, this),\n          Profile: /*#__PURE__*/_jsxDEV(Profile, {\n            setAuthState: setAuthState,\n            email: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n          mediaType: mediaType,\n          MTKey: MTKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        exact: true,\n        path: \"/account\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Account, {\n          saveUserName: saveUserName,\n          saveUserEmail: saveUserEmail,\n          saveUserPassword: saveUserPassword,\n          displayName: displayName,\n          email: email,\n          acctMsg: acctMsg,\n          setAcctMsg: setAcctMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Router, \"xv1KwUXieIe7CGs3CDJ3bT5ITFI=\");\n\n_c = Router;\nexport default _c2 = withRouter(Router);\n{\n  /* <Route exact path='/'>\n     {authState === null ?\n         (\n             <div>\n              </div>\n         ) :\n         <Redirect to='/dashboard' />\n     }\n  </Route> */\n}\n{\n  /* <Route exact path='/signin'>\n                 {authState === null ?\n                     <div>\n                         <Nav />\n                         <SignIn\n                             signInUser={signInUser}\n                             signInMsg={signInMsg}\n                             setSIMsg={setSIMsg}\n                             authState={authState}\n                         />\n                     </div>\n                     : <Redirect to='/dashboard' />\n                 }\n             </Route> */\n}\n{\n  /* <Route exact path='/signup'>\n     {authState === null ?\n         <div>\n          </div>\n         : <Redirect to='/dashboard' />\n     }\n  </Route> */\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Router\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/routing/Router.js"],"names":["updateEmail","updateProfile","updatePassword","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","useState","BrowserRouter","Route","Switch","Redirect","withRouter","auth","AuthMsg","SignIn","SignUp","Nav","NavMediaBar","Profile","SignInBtn","SignOutBtn","films","series","Home","Dashboard","Account","Footer","customMsg","Router","props","mediaType","setMediaType","MTKey","setMTKey","Object","keys","authState","setAuthState","localStorage","getItem","displayName","setDN","email","setEmail","signInMsg","setSIMsg","signUpMsg","setSUMsg","acctMsg","setAcctMsg","user","console","log","setItem","JSON","stringify","removeItem","authUser","saveUserName","authObj","name","currentUser","then","catch","error","saveUserEmail","saveUserPassword","pw","PrivateRoute","children","rest","RouteWrap","createUser","password","userCredential","errorCode","code","signInUser"],"mappings":"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","sourcesContent":["import {\n    updateEmail,\n    updateProfile,\n    updatePassword,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    onAuthStateChanged,\n} from \"firebase/auth\";\nimport { useState } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { auth } from '../firebase/firebase';\nimport AuthMsg from '../components/AuthMsg';\nimport SignIn from '../components/SignIn';\nimport SignUp from '../components/SignUp';\nimport Nav from '../components/Nav';\nimport { NavMediaBar, Profile, SignInBtn, SignOutBtn } from '../components/Nav_components/index';\nimport films from '../assets/films/index';\nimport series from '../assets/series/index';\nimport Home from '../components/Home';\nimport Dashboard from '../components/Dashboard';\nimport Account from '../components/Account';\nimport Footer from '../components/Footer';\nimport { customMsg } from '../helper/helper';\n\nconst Router = (props) => {\n    const [mediaType, setMediaType] = useState({ films }); //films default\n    const [MTKey, setMTKey] = useState(Object.keys({ films }));\n\n    const [authState, setAuthState] = useState(localStorage.getItem('authState')); //account params\n    const [displayName, setDN] = useState();\n    const [email, setEmail] = useState(null);\n\n    const [signInMsg, setSIMsg] = useState(null);\n    const [signUpMsg, setSUMsg] = useState(null);\n    const [acctMsg, setAcctMsg] = useState(null);\n\n    onAuthStateChanged(auth, (user) => {\n        if (user) {\n            console.log(user, 'authed');\n            localStorage.setItem('authState', JSON.stringify(user));\n            setEmail(user.email);\n        } else {\n            localStorage.removeItem('authState');\n        }\n    });\n\n    onAuthStateChanged(authUser => {\n        if (authUser) {\n\n        } else {\n        }\n    });\n\n    async function saveUserName(authObj, name) {\n        updateProfile(authObj.currentUser, {\n            displayName: `${name}`,\n        }).then(() => {\n            console.log('username saved');\n            // ...\n        }).catch((error) => {\n            // An error occurred\n            // ...\n            console.log(error, 'error updating profile');\n        });\n    }\n\n    async function saveUserEmail(authObj, email) {\n        updateEmail(authObj.currentUser, `${email}`).then(() => {\n            // Email updated!\n        }).catch((error) => {\n            // An error occurred\n            console.log(error, 'error updating email')\n        });\n    }\n\n    async function saveUserPassword(authObj, pw) {\n        updatePassword(authObj.currentUser, `${pw}`).then(() => {\n            console.log('pw updated')\n            // Update successful.\n        }).catch((error) => {\n            // An error ocurred\n            console.log(error, 'error updating pw')\n        });\n    }\n\n    function PrivateRoute({ children, ...rest }) {\n        return (\n            <Route {...rest} render={() => {\n                return authState !== null\n                    ? children\n                    : <Redirect to='/' />\n            }} />\n        )\n    }\n\n    function RouteWrap({ children, ...rest }) {\n        return (\n            <Route {...rest} render={() => {\n                return authState === null\n                    ? children\n                    : <Redirect to='/dashboard' />\n            }} />\n        );\n    }\n\n    async function createUser(email, password, name) {\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                //const user = userCredential.user;\n                //console.log(user, 'user/createdUser');\n                console.log(auth.currentUser);\n                setAuthState(auth.currentUser);\n                //setSUMsg(<AuthMsg useClass={'auth-success'} msg={customMsg('auth/sign-up-success')} />);\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                //const errorMessage = error.message;\n                //console.log('error occured', errorCode, errorMessage);\n                setSUMsg(<AuthMsg useClass={`auth-error`} msg={customMsg(errorCode)} />)\n            });\n    }\n\n    async function signInUser(email, password) {\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                //console.log('sign in successful', userCredential.user);\n                console.log(auth.currentUser);\n                setAuthState(auth.currentUser);\n                //setSIMsg(<AuthMsg useClass={`auth-success`} msg={customMsg('auth/sign-in-success')} />);\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                //const errorMessage = error.message;\n                //console.log('sign in error', error, errorCode, errorMessage);\n                setSIMsg(<AuthMsg useClass={`auth-error`} msg={customMsg(errorCode)} />);\n            });\n    }\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <RouteWrap exact path='/'>\n                    <Nav\n                        SignInBtn={<SignInBtn />}\n                    />\n                    <Home setEmail={setEmail} />\n                </RouteWrap>\n\n                <RouteWrap exact path='/signin'>\n                    <Nav />\n                    <SignIn\n                        signInUser={signInUser}\n                        signInMsg={signInMsg}\n                        setSIMsg={setSIMsg}\n                        authState={authState}\n                    />\n                </RouteWrap >\n\n                <RouteWrap exact path='/signup'>\n                    <Nav />\n                    <SignUp\n                        email={email}\n                        createUser={createUser}\n                        signUpMsg={signUpMsg}\n                        setSUMsg={setSUMsg}\n                        authState={authState}\n                    />\n                </RouteWrap>\n\n                <PrivateRoute exact path='/dashboard'>\n                    <Nav\n                        NavMediaBar={<NavMediaBar setMediaType={setMediaType} setMTKey={setMTKey} films={films} series={series} />}\n                        Profile={<Profile setAuthState={setAuthState} email={email} />}\n                    />\n                    <Dashboard mediaType={mediaType} MTKey={MTKey} />\n                </PrivateRoute>\n\n                <PrivateRoute exact path='/account'>\n                    <Nav />\n                    <Account\n                        saveUserName={saveUserName}\n                        saveUserEmail={saveUserEmail}\n                        saveUserPassword={saveUserPassword}\n                        displayName={displayName}\n                        email={email}\n                        acctMsg={acctMsg}\n                        setAcctMsg={setAcctMsg}\n                    />\n                </PrivateRoute>\n\n            </Switch>\n            <Footer />\n        </BrowserRouter >\n    );\n};\n\nexport default withRouter(Router);\n\n\n{/* <Route exact path='/'>\n    {authState === null ?\n        (\n            <div>\n\n            </div>\n        ) :\n        <Redirect to='/dashboard' />\n    }\n</Route> */}\n\n{/* <Route exact path='/signin'>\n                {authState === null ?\n                    <div>\n                        <Nav />\n                        <SignIn\n                            signInUser={signInUser}\n                            signInMsg={signInMsg}\n                            setSIMsg={setSIMsg}\n                            authState={authState}\n                        />\n                    </div>\n                    : <Redirect to='/dashboard' />\n                }\n            </Route> */}\n\n{/* <Route exact path='/signup'>\n    {authState === null ?\n        <div>\n\n        </div>\n        : <Redirect to='/dashboard' />\n    }\n</Route> */}"]},"metadata":{},"sourceType":"module"}