{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useMemo, createRef } from 'react';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  document.querySelector('html').style.backgroundImage = `url(${joker})`;\n  const media = useRef();\n  const refs = useMemo(() => Array.from({\n    length: 3\n  }).map(() => /*#__PURE__*/createRef()), []);\n  console.log(refs);\n\n  function onClickHand(e) {\n    console.log(e.target);\n    console.log(refs);\n  }\n\n  function makeMediaBar() {\n    let arr = [];\n    let i = 0;\n\n    for (let key in films) {\n      console.log(refs.current[i], 'refscurrenti');\n      arr.push( /*#__PURE__*/_jsxDEV(MediaBar, {\n        ref: refs.current,\n        title: key,\n        onClickHand: onClickHand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this));\n    }\n\n    return arr.map(item => {\n      return item;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    style: {\n      background: `url(${joker})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainMediaCont\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Watch Joker Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Forever alone in a crowd, failed comedian Arthur Fleck seeks connection as he walks the streets of Gotham City. Arthur wears two masks -- the one he paints for his day job as a clown, and the guise he projects in a futile attempt to feel like he's part of the world around him.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mainPlayBtn\",\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), makeMediaBar()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"IfSz838rKrJQ/7UvyhDII79U6/g=\");\n\n_c = Dashboard;\nexport default Dashboard;\n{\n  /* <div ref={media}>\n     <div>\n         <MediaBar title={`children`} onClickHand={onClickHand} />\n         <div id='children'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`drama`} onClickHand={onClickHand} />\n         <div id='drama'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`romance`} onClickHand={onClickHand} />\n         <div id='romance'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`suspense`} onClickHand={onClickHand} />\n         <div id='suspense'>Hello World</div>\n     </div>\n     <div>\n         <MediaBar title={`thriller`} onClickHand={onClickHand} />\n         <div id='thriller'>Hello World</div>\n     </div>\n  </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js"],"names":["useRef","useMemo","createRef","MediaBar","films","joker","Dashboard","document","querySelector","style","backgroundImage","media","refs","Array","from","length","map","console","log","onClickHand","e","target","makeMediaBar","arr","i","key","current","push","item","background"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,yBAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpBC,EAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAA/B,CAAqCC,eAArC,GAAwD,OAAML,KAAM,GAApE;AAEA,QAAMM,KAAK,GAAGX,MAAM,EAApB;AACA,QAAMY,IAAI,GAAGX,OAAO,CAChB,MAAMY,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAX,EAA0BC,GAA1B,CAA8B,mBAAMd,SAAS,EAA7C,CADU,EAEhB,EAFgB,CAApB;AAKAe,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AAEA,WAASO,WAAT,CAAqBC,CAArB,EAAwB;AACpBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACC,MAAd;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACH;;AAED,WAASU,YAAT,GAAwB;AACpB,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,CAAC,GAAG,CAAR;;AACA,SAAK,IAAIC,GAAT,IAAgBrB,KAAhB,EAAuB;AACnBa,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACc,OAAL,CAAaF,CAAb,CAAZ,EAA6B,cAA7B;AACAD,MAAAA,GAAG,CAACI,IAAJ,eACI,QAAC,QAAD;AAAU,QAAA,GAAG,EAAEf,IAAI,CAACc,OAApB;AAA6B,QAAA,KAAK,EAAED,GAApC;AAAyC,QAAA,WAAW,EAAEN;AAAtD;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AACD,WAAOI,GAAG,CAACP,GAAJ,CAASY,IAAD,IAAU;AACrB,aAAOA,IAAP;AACH,KAFM,CAAP;AAGH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAG,OAAMxB,KAAM;AAA3B,KAAlC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAYKiB,YAAY,EAZjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA7CD;;GAAMhB,S;;KAAAA,S;AA+CN,eAAeA,SAAf;AAGA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAU","sourcesContent":["import { useRef, useMemo, createRef } from 'react';\nimport MediaBar from './MediaBar';\nimport films from '../assets/films';\nimport joker from '../images/joker.jpg';\nimport '../styles/Dashboard.css';\n\nconst Dashboard = () => {\n    document.querySelector('html').style.backgroundImage = `url(${joker})`;\n\n    const media = useRef();\n    const refs = useMemo(\n        () => Array.from({ length: 3 }).map(() => createRef()),\n        []\n    );\n\n    console.log(refs);\n\n    function onClickHand(e) {\n        console.log(e.target);\n        console.log(refs);\n    }\n\n    function makeMediaBar() {\n        let arr = [];\n        let i = 0;\n        for (let key in films) {\n            console.log(refs.current[i], 'refscurrenti');\n            arr.push(\n                <MediaBar ref={refs.current} title={key} onClickHand={onClickHand} />\n            );\n        }\n        return arr.map((item) => {\n            return item;\n        });\n    }\n    return (\n        <div className='dashboard' style={{ background: `url(${joker})` }}>\n            <div className='mainMediaCont'>\n                <div>Watch Joker Now</div>\n                <div>\n                    Forever alone in a crowd, failed comedian Arthur Fleck\n                    seeks connection as he walks the streets of Gotham City.\n                    Arthur wears two masks -- the one he paints for his day job\n                    as a clown, and the guise he projects in a futile attempt to\n                    feel like he's part of the world around him.\n                </div>\n                <button className='mainPlayBtn'>Play</button>\n            </div>\n            {makeMediaBar()}\n        </div >\n    );\n};\n\nexport default Dashboard;\n\n\n{/* <div ref={media}>\n    <div>\n        <MediaBar title={`children`} onClickHand={onClickHand} />\n        <div id='children'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`drama`} onClickHand={onClickHand} />\n        <div id='drama'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`romance`} onClickHand={onClickHand} />\n        <div id='romance'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`suspense`} onClickHand={onClickHand} />\n        <div id='suspense'>Hello World</div>\n    </div>\n    <div>\n        <MediaBar title={`thriller`} onClickHand={onClickHand} />\n        <div id='thriller'>Hello World</div>\n    </div>\n</div> */}"]},"metadata":{},"sourceType":"module"}