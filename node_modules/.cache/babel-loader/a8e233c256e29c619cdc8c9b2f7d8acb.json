{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Username.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { auth } from '../firebase/firebase';\nimport { useHistory } from 'react-router-dom';\nimport { customMsg } from '../helper/helper';\nimport { updateEmail, updateProfile, updatePassword, reauthenticateWithCredential, EmailAuthProvider } from \"firebase/auth\";\nimport AuthMsg from './AuthMsg';\nimport '../styles/Username.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Username = ({\n  displayName,\n  setDN,\n  setEmail,\n  email,\n  acctMsg,\n  setAcctMsg\n}) => {\n  _s();\n\n  const name = useRef();\n  const currentPw = useRef();\n  const pw = useRef();\n  const confirmPw = useRef();\n  const [error, setError] = useState(null);\n  const history = useHistory();\n\n  function redirectSignUp() {\n    history.push(`dashboard`);\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const promiseArr = [];\n    const cred = EmailAuthProvider.credential(auth.currentUser.email, currentPw.current.value);\n    reauthenticateWithCredential(auth.currentUser, cred).then(() => {\n      // User re-authed.\n      checkPassword(promiseArr); //checkName(promiseArr);\n\n      checkEmail(promiseArr);\n      Promise.all(promiseArr).then(() => {\n        setEmail(emailField.current.value);\n        console.log('success');\n        redirectSignUp();\n      }).catch(error => {\n        setError( /*#__PURE__*/_jsxDEV(AuthMsg, {\n          useClass: `auth-error`,\n          msg: customMsg(`${error}`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 30\n        }, this));\n      }).finally(() => {\n        console.log('in here');\n      });\n    }).catch(error => {\n      // An error ocurred\n      console.log(error.code);\n\n      if (error.code) {\n        setError( /*#__PURE__*/_jsxDEV(AuthMsg, {\n          useClass: `auth-error`,\n          msg: customMsg(error.code)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 26\n        }, this));\n      }\n\n      return;\n    });\n\n    function checkName(promiseArr) {\n      //optional\n      if (nameField.current.value !== '') {\n        promiseArr.push(updateProfile(auth.currentUser, {\n          displayName: nameField.current.value\n        }));\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"username\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"username-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Update Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Leave 'new' field blank if not updating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), error, /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Current Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: currentPw,\n          type: \"password\",\n          placeholder: \"Current Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: nameField,\n          type: \"text\",\n          placeholder: \"First Name\",\n          defaultValue: displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username-submit\",\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Username, \"Lshd/6/o0ZL0ktTW3znwEKSmCKE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Username;\nexport default Username;\n\nvar _c;\n\n$RefreshReg$(_c, \"Username\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Username.js"],"names":["useRef","useState","auth","useHistory","customMsg","updateEmail","updateProfile","updatePassword","reauthenticateWithCredential","EmailAuthProvider","AuthMsg","Username","displayName","setDN","setEmail","email","acctMsg","setAcctMsg","name","currentPw","pw","confirmPw","error","setError","history","redirectSignUp","push","handleSubmit","e","preventDefault","promiseArr","cred","credential","currentUser","current","value","then","checkPassword","checkEmail","Promise","all","emailField","console","log","catch","finally","code","checkName","nameField"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\nimport { auth } from '../firebase/firebase';\nimport { useHistory } from 'react-router-dom';\nimport { customMsg } from '../helper/helper';\nimport {\n    updateEmail,\n    updateProfile,\n    updatePassword,\n    reauthenticateWithCredential,\n    EmailAuthProvider,\n} from \"firebase/auth\";\nimport AuthMsg from './AuthMsg';\nimport '../styles/Username.css';\n\nconst Username = ({ displayName, setDN, setEmail, email, acctMsg, setAcctMsg }) => {\n    const name = useRef();\n    const currentPw = useRef();\n    const pw = useRef();\n    const confirmPw = useRef();\n\n    const [error, setError] = useState(null);\n    const history = useHistory();\n\n    function redirectSignUp() {\n        history.push(`dashboard`);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        const promiseArr = [];\n        const cred = EmailAuthProvider.credential(auth.currentUser.email, currentPw.current.value);\n        reauthenticateWithCredential(auth.currentUser, cred).then(() => {\n            // User re-authed.\n            checkPassword(promiseArr);\n            //checkName(promiseArr);\n            checkEmail(promiseArr);\n            Promise.all(promiseArr)\n                .then(() => {\n                    setEmail(emailField.current.value);\n                    console.log('success');\n                    redirectSignUp();\n                })\n                .catch((error) => {\n                    setError(<AuthMsg useClass={`auth-error`} msg={customMsg(`${error}`)} />);\n                })\n                .finally(() => {\n                    console.log('in here');\n                })\n        }).catch((error) => {\n            // An error ocurred\n            console.log(error.code);\n            if (error.code) {\n                setError(<AuthMsg useClass={`auth-error`} msg={customMsg(error.code)} />);\n            }\n            return;\n        });\n\n        function checkName(promiseArr) { //optional\n            if (nameField.current.value !== '') {\n                promiseArr.push(updateProfile(auth.currentUser, { displayName: nameField.current.value }));\n            }\n        }\n    }\n\n    return (\n        <div className='username'>\n            <div className='username-container'>\n                <div>\n                    <h1>Update Username</h1>\n                    <h2>Leave 'new' field blank if not updating</h2>\n                </div>\n                {error}\n                <form onSubmit={(e) => handleSubmit(e)}>\n                    <label>Current Password</label>\n                    <input ref={currentPw} type='password' placeholder='Current Password' required></input>\n                    <label>New Name</label>\n                    <input ref={nameField} type='text' placeholder='First Name' defaultValue={displayName}></input>\n                    <input id='username-submit' type='submit' value='Submit'></input>\n                </form>\n            </div>\n            <div className='overlay'></div>\n        </div >\n    );\n};\n\nexport default Username;"]},"metadata":{},"sourceType":"module"}