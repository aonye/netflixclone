{"ast":null,"code":"function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction configTitle(string) {\n  let temp = string.split('-');\n  const arr = temp.map(item => {\n    return item.charAt(0).toUpperCase() + item.slice(1);\n  });\n  return arr.join(' ');\n}\n\nfunction customMsg(code) {\n  switch (code) {\n    case 'auth/user-not-found':\n      {\n        return 'We cannot find an account with this email address. Please try again or register.';\n      }\n\n    case 'auth/wrong-password':\n      {\n        return 'Password incorrect. Please try again.';\n      }\n\n    case 'auth/email-already-in-use':\n      {\n        return 'Email already in use. Please sign up with a different email address.';\n      }\n\n    case 'auth/weak-password':\n      {\n        return 'Password must be at least 6 characters.';\n      }\n\n    case 'auth/invalid-email':\n      {\n        return 'Please enter a valid email address.';\n      }\n\n    case 'auth/missing-email':\n      {\n        return 'Please enter an email address.';\n      }\n\n    case 'auth/confirm-pw-error':\n      {\n        return 'Passwords do not match. Please try again.';\n      }\n\n    case 'auth/no-name':\n      {\n        return 'Please enter your name.';\n      }\n\n    case 'auth/sign-in-success':\n      {\n        return 'Sign in successful. Welcome back.';\n      }\n\n    case 'auth/sign-up-success':\n      {\n        return 'Sign up successful. Welcome to Netflix.';\n      }\n\n    case 'auth/no-password':\n      {\n        return 'Please enter a password.';\n      }\n\n    case 'auth/no-confirmpw':\n      {\n        return 'Please confirm password.';\n      }\n\n    default:\n      {\n        return `${code}`;\n      }\n  }\n}\n\nfunction checkPwMatch(pw1, pw2) {\n  return pw1 === pw2 ? true : false;\n}\n\nexport { capitalizeFirstLetter, configTitle, customMsg, checkPwMatch };","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/helper/helper.js"],"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","configTitle","temp","split","arr","map","item","join","customMsg","code","checkPwMatch","pw1","pw2"],"mappings":"AAAA,SAASA,qBAAT,CAA+BC,MAA/B,EAAuC;AACnC,SAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACH;;AAED,SAASC,WAAT,CAAqBJ,MAArB,EAA6B;AACzB,MAAIK,IAAI,GAAGL,MAAM,CAACM,KAAP,CAAa,GAAb,CAAX;AACA,QAAMC,GAAG,GAAGF,IAAI,CAACG,GAAL,CAAUC,IAAD,IAAU;AAC3B,WAAOA,IAAI,CAACR,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BO,IAAI,CAACN,KAAL,CAAW,CAAX,CAAtC;AACH,GAFW,CAAZ;AAGA,SAAOI,GAAG,CAACG,IAAJ,CAAS,GAAT,CAAP;AACH;;AAED,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,UAAQA,IAAR;AACI,SAAM,qBAAN;AAA8B;AAC1B,eAAO,kFAAP;AACH;;AACD,SAAM,qBAAN;AAA8B;AAC1B,eAAO,uCAAP;AACH;;AACD,SAAM,2BAAN;AAAoC;AAChC,eAAO,sEAAP;AACH;;AACD,SAAM,oBAAN;AAA6B;AACzB,eAAO,yCAAP;AACH;;AACD,SAAM,oBAAN;AAA6B;AACzB,eAAO,qCAAP;AACH;;AACD,SAAM,oBAAN;AAA6B;AACzB,eAAO,gCAAP;AACH;;AACD,SAAM,uBAAN;AAAgC;AAC5B,eAAO,2CAAP;AACH;;AACD,SAAM,cAAN;AAAuB;AACnB,eAAO,yBAAP;AACH;;AACD,SAAM,sBAAN;AAA+B;AAC3B,eAAO,mCAAP;AACH;;AACD,SAAM,sBAAN;AAA+B;AAC3B,eAAO,yCAAP;AACH;;AACD,SAAM,kBAAN;AAA2B;AACvB,eAAO,0BAAP;AACH;;AACD,SAAM,mBAAN;AAA4B;AACxB,eAAO,0BAAP;AACH;;AACD;AAAS;AACL,eAAQ,GAAEA,IAAK,EAAf;AACH;AAvCL;AAyCH;;AAED,SAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5B,SAAOD,GAAG,KAAKC,GAAR,GAAc,IAAd,GAAqB,KAA5B;AACH;;AAED,SAAShB,qBAAT,EAAgCK,WAAhC,EAA6CO,SAA7C,EAAwDE,YAAxD","sourcesContent":["function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction configTitle(string) {\n    let temp = string.split('-');\n    const arr = temp.map((item) => {\n        return item.charAt(0).toUpperCase() + item.slice(1);\n    });\n    return arr.join(' ');\n}\n\nfunction customMsg(code) {\n    switch (code) {\n        case ('auth/user-not-found'): {\n            return 'We cannot find an account with this email address. Please try again or register.';\n        }\n        case ('auth/wrong-password'): {\n            return 'Password incorrect. Please try again.';\n        }\n        case ('auth/email-already-in-use'): {\n            return 'Email already in use. Please sign up with a different email address.';\n        }\n        case ('auth/weak-password'): {\n            return 'Password must be at least 6 characters.';\n        }\n        case ('auth/invalid-email'): {\n            return 'Please enter a valid email address.';\n        }\n        case ('auth/missing-email'): {\n            return 'Please enter an email address.';\n        }\n        case ('auth/confirm-pw-error'): {\n            return 'Passwords do not match. Please try again.';\n        }\n        case ('auth/no-name'): {\n            return 'Please enter your name.';\n        }\n        case ('auth/sign-in-success'): {\n            return 'Sign in successful. Welcome back.';\n        }\n        case ('auth/sign-up-success'): {\n            return 'Sign up successful. Welcome to Netflix.';\n        }\n        case ('auth/no-password'): {\n            return 'Please enter a password.';\n        }\n        case ('auth/no-confirmpw'): {\n            return 'Please confirm password.';\n        }\n        default: {\n            return `${code}`;\n        }\n    }\n}\n\nfunction checkPwMatch(pw1, pw2) {\n    return pw1 === pw2 ? true : false;\n}\n\nexport { capitalizeFirstLetter, configTitle, customMsg, checkPwMatch };"]},"metadata":{},"sourceType":"module"}