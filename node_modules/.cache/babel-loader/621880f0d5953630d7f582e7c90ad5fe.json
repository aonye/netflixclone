{"ast":null,"code":"import _regeneratorRuntime from\"/home/yeandyy/Documents/the_odin_project/netflixclone/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/yeandyy/Documents/the_odin_project/netflixclone/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/yeandyy/Documents/the_odin_project/netflixclone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/yeandyy/Documents/the_odin_project/netflixclone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{capitalizeFirstLetter}from'../helper/helper';import YoutubeEmbed from'./YoutubeEmbed';import MainMedia from'./MainMedia';import MediaBar from'./MediaBar';import Preview from'./Preview';import{configTitle}from'../helper/helper';import'../styles/Dashboard.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Dashboard=function Dashboard(_ref){var mediaType=_ref.mediaType,MTKey=_ref.MTKey;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),currentMedia=_useState2[0],setCurrentMedia=_useState2[1];var _useState3=useState({currentFilm:null,currentGenre:null}),_useState4=_slicedToArray(_useState3,2),preview=_useState4[0],setPreview=_useState4[1];function onClickHand(_x){return _onClickHand.apply(this,arguments);}function _onClickHand(){_onClickHand=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var _e$target$classList,genre,filmName,_mediaType$MTKey$genr,title,description,YTLink;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_e$target$classList=_slicedToArray(e.target.classList,2),genre=_e$target$classList[0];filmName=e.target.alt;_mediaType$MTKey$genr=mediaType[MTKey][genre].find(function(item){return item.title===filmName;}),title=_mediaType$MTKey$genr.title,description=_mediaType$MTKey$genr.description,YTLink=_mediaType$MTKey$genr.YTLink;setPreview({currentFilm:/*#__PURE__*/_jsx(Preview,{image:getPreview(MTKey,genre,filmName),hoverPlayBtn:hoverPlayBtn,hoverOffPlayBtn:hoverOffPlayBtn,playBtnClickHand:playBtnClickHand,xClickHand:xClickHand,title:configTitle(title),description:description,YTLink:YTLink}),currentGenre:genre});if(window.innerWidth<1000){//automatically open the link if <1000px width\nsetCurrentMedia(/*#__PURE__*/_jsx(YoutubeEmbed,{embedId:YTLink,stopPlayHand:stopPlayHand}));}case 5:case\"end\":return _context.stop();}}},_callee);}));return _onClickHand.apply(this,arguments);}function getPreview(key,genre,filmName){return require(\"../assets/\".concat(key,\"/\").concat(genre,\"/\").concat(filmName,\"/large.jpg\")).default;}function hoverPlayBtn(e){e.target.classList.add('hover');}function hoverOffPlayBtn(e){e.target.classList.remove('hover');}function hoverImgHand(e){e.target.classList.add('cardImgHover');}function hoverOutImgHand(e){e.target.classList.remove('cardImgHover');}function playBtnClickHand(e,url){setCurrentMedia(/*#__PURE__*/_jsx(YoutubeEmbed,{embedId:url,stopPlayHand:stopPlayHand}));}function stopPlayHand(e){setCurrentMedia(null);}function xClickHand(){setPreview(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{currentFilm:null});});}function makeMediaBar(){var arr=[];var key=Object.keys(mediaType);for(var genre in mediaType[key]){arr.push(/*#__PURE__*/_jsx(\"div\",{className:\"media-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"media-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"media-title\",children:capitalizeFirstLetter(genre)}),/*#__PURE__*/_jsx(MediaBar,{genre:genre,mediaType:mediaType,MTKey:MTKey,onClickHand:onClickHand,hoverImgHand:hoverImgHand,hoverOutImgHand:hoverOutImgHand}),/*#__PURE__*/_jsx(\"div\",{id:\"\".concat(genre,\"Preview\"),className:\"preview-container\",children:preview.currentGenre===genre&&preview.currentFilm!==null?preview.currentFilm:null})]})}));}return arr.map(function(item,index){return/*#__PURE__*/_jsx(\"div\",{children:item},index);});}return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsx(MainMedia,{display:\"joker\",hoverPlayBtn:hoverPlayBtn,hoverOffPlayBtn:hoverOffPlayBtn,playBtnClickHand:playBtnClickHand}),/*#__PURE__*/_jsx(\"div\",{children:makeMediaBar()}),currentMedia]});};export default Dashboard;","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/netflixclone/src/components/Dashboard.js"],"names":["useState","capitalizeFirstLetter","YoutubeEmbed","MainMedia","MediaBar","Preview","configTitle","Dashboard","mediaType","MTKey","currentMedia","setCurrentMedia","currentFilm","currentGenre","preview","setPreview","onClickHand","e","target","classList","genre","filmName","alt","find","item","title","description","YTLink","getPreview","hoverPlayBtn","hoverOffPlayBtn","playBtnClickHand","xClickHand","window","innerWidth","stopPlayHand","key","require","default","add","remove","hoverImgHand","hoverOutImgHand","url","prevState","makeMediaBar","arr","Object","keys","push","map","index"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { capitalizeFirstLetter } from '../helper/helper';\nimport YoutubeEmbed from './YoutubeEmbed';\nimport MainMedia from './MainMedia';\nimport MediaBar from './MediaBar';\nimport Preview from './Preview';\nimport { configTitle } from '../helper/helper';\nimport '../styles/Dashboard.css';\n\nconst Dashboard = ({ mediaType, MTKey }) => {\n    const [currentMedia, setCurrentMedia] = useState(null);\n    const [preview, setPreview] = useState({\n        currentFilm: null,\n        currentGenre: null,\n    });\n\n    async function onClickHand(e) {\n        const [genre, ,] = e.target.classList;\n        const filmName = e.target.alt;\n        const { title, description, YTLink } = mediaType[MTKey][genre].find((item) => item.title === filmName);\n        setPreview({\n            currentFilm:\n                <Preview\n                    image={getPreview(MTKey, genre, filmName)}\n                    hoverPlayBtn={hoverPlayBtn}\n                    hoverOffPlayBtn={hoverOffPlayBtn}\n                    playBtnClickHand={playBtnClickHand}\n                    xClickHand={xClickHand}\n                    title={configTitle(title)}\n                    description={description}\n                    YTLink={YTLink}\n                />,\n            currentGenre: genre\n        });\n        if (window.innerWidth < 1000) { //automatically open the link if <1000px width\n            setCurrentMedia(<YoutubeEmbed embedId={YTLink} stopPlayHand={stopPlayHand} />);\n        }\n    }\n\n    function getPreview(key, genre, filmName) {\n        return require(`../assets/${key}/${genre}/${filmName}/large.jpg`).default;\n    }\n\n    function hoverPlayBtn(e) {\n        e.target.classList.add('hover');\n    }\n\n    function hoverOffPlayBtn(e) {\n        e.target.classList.remove('hover');\n    }\n\n    function hoverImgHand(e) {\n        e.target.classList.add('cardImgHover');\n    }\n\n    function hoverOutImgHand(e) {\n        e.target.classList.remove('cardImgHover');\n    }\n\n    function playBtnClickHand(e, url) {\n        setCurrentMedia(<YoutubeEmbed embedId={url} stopPlayHand={stopPlayHand} />);\n    }\n\n    function stopPlayHand(e) {\n        setCurrentMedia(null);\n    }\n\n    function xClickHand() {\n        setPreview((prevState) => ({\n            ...prevState,\n            currentFilm: null,\n        }));\n    }\n\n    function makeMediaBar() {\n        let arr = [];\n        const key = Object.keys(mediaType);\n        for (let genre in mediaType[key]) {\n            arr.push(\n                <div className='media-wrapper'>\n                    <div className='media-container'>\n                        <div className='media-title'>{capitalizeFirstLetter(genre)}</div>\n                        <MediaBar\n                            genre={genre}\n                            mediaType={mediaType}\n                            MTKey={MTKey}\n                            onClickHand={onClickHand}\n                            hoverImgHand={hoverImgHand}\n                            hoverOutImgHand={hoverOutImgHand}\n                        />\n                        <div id={`${genre}Preview`} className='preview-container'>\n                            {preview.currentGenre === genre && preview.currentFilm !== null ?\n                                preview.currentFilm :\n                                null\n                            }\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        return arr.map((item, index) => {\n            return (\n                <div key={index}>\n                    {item}\n                </div>\n            );\n        });\n    }\n\n    return (\n        <div className='dashboard'>\n            <MainMedia\n                display={`joker`}\n                hoverPlayBtn={hoverPlayBtn}\n                hoverOffPlayBtn={hoverOffPlayBtn}\n                playBtnClickHand={playBtnClickHand} />\n            <div>\n                {makeMediaBar()}\n            </div>\n            {currentMedia}\n        </div >\n    );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}